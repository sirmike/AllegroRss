//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="AllegroWebApiBinding", Namespace="urn:AllegroWebApi")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserPostBuyDataStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemPostBuyDataStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SpecialAuctionStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FavouritesCategoriesStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FavouritesSellersStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(StateInfoStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ServiceInfoStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ServiceInfoCatStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BlackListResStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BlackListStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(WaitFeedbackStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FeedbackResultStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FeedbackManyStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TemplateInfoType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CountryInfoType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemTransStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemBilling))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MyFeedbackListStruct2))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MyAccountStruct2))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SiteJournal))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FeedbackList))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BidListStruct2))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SearchResponseType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(InfoCatList))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SysStatusType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserItemList))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SiteInfoType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SiteFlagInfoType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SellFormType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BillingDataType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemInfoStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(StructSellFailed))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(StructSellAgain))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FieldsValue))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CatInfoType))]
public partial class AllegroWebApiService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback doGetCatsDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doLoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback doLoginEncOperationCompleted;
    
    private System.Threading.SendOrPostCallback doNewAuctionOperationCompleted;
    
    private System.Threading.SendOrPostCallback doNewAuctionExtOperationCompleted;
    
    private System.Threading.SendOrPostCallback doSellSomeAgainOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCheckNewAuctionOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCheckNewAuctionExtOperationCompleted;
    
    private System.Threading.SendOrPostCallback doAddDescToItemsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCheckItemIdByFutureItemIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetCatsDataLimitOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetItemsInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetPaymentDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellFormFieldsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellFormFieldsExtOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSitesFlagInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSitesInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSystemTimeOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetUserIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetUserItemsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetUserLoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback doQueryAllSysStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellFormFieldsExtLimitOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellFormFieldsLimitOperationCompleted;
    
    private System.Threading.SendOrPostCallback doQuerySysStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback doShowCatOperationCompleted;
    
    private System.Threading.SendOrPostCallback doShowItemInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doShowUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback doVerifyItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doAddWatchListOperationCompleted;
    
    private System.Threading.SendOrPostCallback doFeedbackOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetBidItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetBidItem2OperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetFeedbackOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSiteJournalOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSiteJournalInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyAccountOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyAccount2OperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyAccountItemsCountOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyBillingOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyContactOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyFeedbackOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyFeedback2OperationCompleted;
    
    private System.Threading.SendOrPostCallback doSearchOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetAdminUserLicenceDateOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetPaymentStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetUserLicenceDateOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyBillingItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doSetUserLicenceDateOperationCompleted;
    
    private System.Threading.SendOrPostCallback doBidItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCancelBidItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doChangePriceItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doFinishAuctionOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetItemTransactionOperationCompleted;
    
    private System.Threading.SendOrPostCallback doRequestCancelBidOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetCatsDataCountOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyFeedback2LimitOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetCountriesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetServiceTemplatesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellFormAttribsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doFeedbackManyOperationCompleted;
    
    private System.Threading.SendOrPostCallback doShowItemInfoExtOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetWaitingFeedbacksCountOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetWaitingFeedbacksOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetBlackListUsersOperationCompleted;
    
    private System.Threading.SendOrPostCallback doRemoveFromBlackListOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetServiceInfoCategoriesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetServiceInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetStatesInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetShopCatsDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCheckExternalKeyOperationCompleted;
    
    private System.Threading.SendOrPostCallback doSellSomeAgainInShopOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSuperSellerStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetMyDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doInternalIStoreChangeOperationCompleted;
    
    private System.Threading.SendOrPostCallback doInternalCheckLoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback doInternalGetStatusForDebitCardOperationCompleted;
    
    private System.Threading.SendOrPostCallback doInternalGetStatusForCreditCardOperationCompleted;
    
    private System.Threading.SendOrPostCallback doInternalSubmitForDebitCardOperationCompleted;
    
    private System.Threading.SendOrPostCallback doInternalSubmitForCreditCardOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetFavouriteSellersOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetFavouriteCategoriesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSpecialItemsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetPostBuyDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSessionHandleForWidgetOperationCompleted;
    
    /// <remarks/>
    public AllegroWebApiService() {
        this.Url = "http://webapi.allegro.pl/uploader.php";
    }
    
    /// <remarks/>
    public event doGetCatsDataCompletedEventHandler doGetCatsDataCompleted;
    
    /// <remarks/>
    public event doLoginCompletedEventHandler doLoginCompleted;
    
    /// <remarks/>
    public event doLoginEncCompletedEventHandler doLoginEncCompleted;
    
    /// <remarks/>
    public event doNewAuctionCompletedEventHandler doNewAuctionCompleted;
    
    /// <remarks/>
    public event doNewAuctionExtCompletedEventHandler doNewAuctionExtCompleted;
    
    /// <remarks/>
    public event doSellSomeAgainCompletedEventHandler doSellSomeAgainCompleted;
    
    /// <remarks/>
    public event doCheckNewAuctionCompletedEventHandler doCheckNewAuctionCompleted;
    
    /// <remarks/>
    public event doCheckNewAuctionExtCompletedEventHandler doCheckNewAuctionExtCompleted;
    
    /// <remarks/>
    public event doAddDescToItemsCompletedEventHandler doAddDescToItemsCompleted;
    
    /// <remarks/>
    public event doCheckItemIdByFutureItemIdCompletedEventHandler doCheckItemIdByFutureItemIdCompleted;
    
    /// <remarks/>
    public event doGetCatsDataLimitCompletedEventHandler doGetCatsDataLimitCompleted;
    
    /// <remarks/>
    public event doGetItemsInfoCompletedEventHandler doGetItemsInfoCompleted;
    
    /// <remarks/>
    public event doGetPaymentDataCompletedEventHandler doGetPaymentDataCompleted;
    
    /// <remarks/>
    public event doGetSellFormFieldsCompletedEventHandler doGetSellFormFieldsCompleted;
    
    /// <remarks/>
    public event doGetSellFormFieldsExtCompletedEventHandler doGetSellFormFieldsExtCompleted;
    
    /// <remarks/>
    public event doGetSitesFlagInfoCompletedEventHandler doGetSitesFlagInfoCompleted;
    
    /// <remarks/>
    public event doGetSitesInfoCompletedEventHandler doGetSitesInfoCompleted;
    
    /// <remarks/>
    public event doGetSystemTimeCompletedEventHandler doGetSystemTimeCompleted;
    
    /// <remarks/>
    public event doGetUserIDCompletedEventHandler doGetUserIDCompleted;
    
    /// <remarks/>
    public event doGetUserItemsCompletedEventHandler doGetUserItemsCompleted;
    
    /// <remarks/>
    public event doGetUserLoginCompletedEventHandler doGetUserLoginCompleted;
    
    /// <remarks/>
    public event doQueryAllSysStatusCompletedEventHandler doQueryAllSysStatusCompleted;
    
    /// <remarks/>
    public event doGetSellFormFieldsExtLimitCompletedEventHandler doGetSellFormFieldsExtLimitCompleted;
    
    /// <remarks/>
    public event doGetSellFormFieldsLimitCompletedEventHandler doGetSellFormFieldsLimitCompleted;
    
    /// <remarks/>
    public event doQuerySysStatusCompletedEventHandler doQuerySysStatusCompleted;
    
    /// <remarks/>
    public event doShowCatCompletedEventHandler doShowCatCompleted;
    
    /// <remarks/>
    public event doShowItemInfoCompletedEventHandler doShowItemInfoCompleted;
    
    /// <remarks/>
    public event doShowUserCompletedEventHandler doShowUserCompleted;
    
    /// <remarks/>
    public event doVerifyItemCompletedEventHandler doVerifyItemCompleted;
    
    /// <remarks/>
    public event doAddWatchListCompletedEventHandler doAddWatchListCompleted;
    
    /// <remarks/>
    public event doFeedbackCompletedEventHandler doFeedbackCompleted;
    
    /// <remarks/>
    public event doGetBidItemCompletedEventHandler doGetBidItemCompleted;
    
    /// <remarks/>
    public event doGetBidItem2CompletedEventHandler doGetBidItem2Completed;
    
    /// <remarks/>
    public event doGetFeedbackCompletedEventHandler doGetFeedbackCompleted;
    
    /// <remarks/>
    public event doGetSiteJournalCompletedEventHandler doGetSiteJournalCompleted;
    
    /// <remarks/>
    public event doGetSiteJournalInfoCompletedEventHandler doGetSiteJournalInfoCompleted;
    
    /// <remarks/>
    public event doMyAccountCompletedEventHandler doMyAccountCompleted;
    
    /// <remarks/>
    public event doMyAccount2CompletedEventHandler doMyAccount2Completed;
    
    /// <remarks/>
    public event doMyAccountItemsCountCompletedEventHandler doMyAccountItemsCountCompleted;
    
    /// <remarks/>
    public event doMyBillingCompletedEventHandler doMyBillingCompleted;
    
    /// <remarks/>
    public event doMyContactCompletedEventHandler doMyContactCompleted;
    
    /// <remarks/>
    public event doMyFeedbackCompletedEventHandler doMyFeedbackCompleted;
    
    /// <remarks/>
    public event doMyFeedback2CompletedEventHandler doMyFeedback2Completed;
    
    /// <remarks/>
    public event doSearchCompletedEventHandler doSearchCompleted;
    
    /// <remarks/>
    public event doGetAdminUserLicenceDateCompletedEventHandler doGetAdminUserLicenceDateCompleted;
    
    /// <remarks/>
    public event doGetPaymentStatusCompletedEventHandler doGetPaymentStatusCompleted;
    
    /// <remarks/>
    public event doGetUserLicenceDateCompletedEventHandler doGetUserLicenceDateCompleted;
    
    /// <remarks/>
    public event doMyBillingItemCompletedEventHandler doMyBillingItemCompleted;
    
    /// <remarks/>
    public event doSetUserLicenceDateCompletedEventHandler doSetUserLicenceDateCompleted;
    
    /// <remarks/>
    public event doBidItemCompletedEventHandler doBidItemCompleted;
    
    /// <remarks/>
    public event doCancelBidItemCompletedEventHandler doCancelBidItemCompleted;
    
    /// <remarks/>
    public event doChangePriceItemCompletedEventHandler doChangePriceItemCompleted;
    
    /// <remarks/>
    public event doFinishAuctionCompletedEventHandler doFinishAuctionCompleted;
    
    /// <remarks/>
    public event doGetItemTransactionCompletedEventHandler doGetItemTransactionCompleted;
    
    /// <remarks/>
    public event doRequestCancelBidCompletedEventHandler doRequestCancelBidCompleted;
    
    /// <remarks/>
    public event doGetCatsDataCountCompletedEventHandler doGetCatsDataCountCompleted;
    
    /// <remarks/>
    public event doMyFeedback2LimitCompletedEventHandler doMyFeedback2LimitCompleted;
    
    /// <remarks/>
    public event doGetCountriesCompletedEventHandler doGetCountriesCompleted;
    
    /// <remarks/>
    public event doGetServiceTemplatesCompletedEventHandler doGetServiceTemplatesCompleted;
    
    /// <remarks/>
    public event doGetSellFormAttribsCompletedEventHandler doGetSellFormAttribsCompleted;
    
    /// <remarks/>
    public event doFeedbackManyCompletedEventHandler doFeedbackManyCompleted;
    
    /// <remarks/>
    public event doShowItemInfoExtCompletedEventHandler doShowItemInfoExtCompleted;
    
    /// <remarks/>
    public event doGetWaitingFeedbacksCountCompletedEventHandler doGetWaitingFeedbacksCountCompleted;
    
    /// <remarks/>
    public event doGetWaitingFeedbacksCompletedEventHandler doGetWaitingFeedbacksCompleted;
    
    /// <remarks/>
    public event doGetBlackListUsersCompletedEventHandler doGetBlackListUsersCompleted;
    
    /// <remarks/>
    public event doRemoveFromBlackListCompletedEventHandler doRemoveFromBlackListCompleted;
    
    /// <remarks/>
    public event doGetServiceInfoCategoriesCompletedEventHandler doGetServiceInfoCategoriesCompleted;
    
    /// <remarks/>
    public event doGetServiceInfoCompletedEventHandler doGetServiceInfoCompleted;
    
    /// <remarks/>
    public event doGetStatesInfoCompletedEventHandler doGetStatesInfoCompleted;
    
    /// <remarks/>
    public event doGetShopCatsDataCompletedEventHandler doGetShopCatsDataCompleted;
    
    /// <remarks/>
    public event doCheckExternalKeyCompletedEventHandler doCheckExternalKeyCompleted;
    
    /// <remarks/>
    public event doSellSomeAgainInShopCompletedEventHandler doSellSomeAgainInShopCompleted;
    
    /// <remarks/>
    public event doGetSuperSellerStatusCompletedEventHandler doGetSuperSellerStatusCompleted;
    
    /// <remarks/>
    public event doGetMyDataCompletedEventHandler doGetMyDataCompleted;
    
    /// <remarks/>
    public event doInternalIStoreChangeCompletedEventHandler doInternalIStoreChangeCompleted;
    
    /// <remarks/>
    public event doInternalCheckLoginCompletedEventHandler doInternalCheckLoginCompleted;
    
    /// <remarks/>
    public event doInternalGetStatusForDebitCardCompletedEventHandler doInternalGetStatusForDebitCardCompleted;
    
    /// <remarks/>
    public event doInternalGetStatusForCreditCardCompletedEventHandler doInternalGetStatusForCreditCardCompleted;
    
    /// <remarks/>
    public event doInternalSubmitForDebitCardCompletedEventHandler doInternalSubmitForDebitCardCompleted;
    
    /// <remarks/>
    public event doInternalSubmitForCreditCardCompletedEventHandler doInternalSubmitForCreditCardCompleted;
    
    /// <remarks/>
    public event doGetFavouriteSellersCompletedEventHandler doGetFavouriteSellersCompleted;
    
    /// <remarks/>
    public event doGetFavouriteCategoriesCompletedEventHandler doGetFavouriteCategoriesCompleted;
    
    /// <remarks/>
    public event doGetSpecialItemsCompletedEventHandler doGetSpecialItemsCompleted;
    
    /// <remarks/>
    public event doGetPostBuyDataCompletedEventHandler doGetPostBuyDataCompleted;
    
    /// <remarks/>
    public event doGetSessionHandleForWidgetCompletedEventHandler doGetSessionHandleForWidgetCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#catsdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cats-list")]
    public CatInfoType[] doGetCatsData([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetCatsData", new object[] {
                    countryid,
                    localversion,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetCatsData(int countryid, long localversion, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetCatsData", new object[] {
                    countryid,
                    localversion,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public CatInfoType[] EnddoGetCatsData(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetCatsDataAsync(int countryid, long localversion, string webapikey) {
        this.doGetCatsDataAsync(countryid, localversion, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetCatsDataAsync(int countryid, long localversion, string webapikey, object userState) {
        if ((this.doGetCatsDataOperationCompleted == null)) {
            this.doGetCatsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCatsDataOperationCompleted);
        }
        this.InvokeAsync("doGetCatsData", new object[] {
                    countryid,
                    localversion,
                    webapikey}, this.doGetCatsDataOperationCompleted, userState);
    }
    
    private void OndoGetCatsDataOperationCompleted(object arg) {
        if ((this.doGetCatsDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetCatsDataCompleted(this, new doGetCatsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#login", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("session-handle-part")]
    public string doLogin([System.Xml.Serialization.SoapElementAttribute("user-login")] string userlogin, [System.Xml.Serialization.SoapElementAttribute("user-password")] string userpassword, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("hash-offset")] out int hashoffset, [System.Xml.Serialization.SoapElementAttribute("server-time")] out long servertime) {
        object[] results = this.Invoke("doLogin", new object[] {
                    userlogin,
                    userpassword,
                    countrycode,
                    webapikey,
                    localversion});
        hashoffset = ((int)(results[1]));
        servertime = ((long)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoLogin(string userlogin, string userpassword, int countrycode, string webapikey, long localversion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doLogin", new object[] {
                    userlogin,
                    userpassword,
                    countrycode,
                    webapikey,
                    localversion}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoLogin(System.IAsyncResult asyncResult, out int hashoffset, out long servertime) {
        object[] results = this.EndInvoke(asyncResult);
        hashoffset = ((int)(results[1]));
        servertime = ((long)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doLoginAsync(string userlogin, string userpassword, int countrycode, string webapikey, long localversion) {
        this.doLoginAsync(userlogin, userpassword, countrycode, webapikey, localversion, null);
    }
    
    /// <remarks/>
    public void doLoginAsync(string userlogin, string userpassword, int countrycode, string webapikey, long localversion, object userState) {
        if ((this.doLoginOperationCompleted == null)) {
            this.doLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoLoginOperationCompleted);
        }
        this.InvokeAsync("doLogin", new object[] {
                    userlogin,
                    userpassword,
                    countrycode,
                    webapikey,
                    localversion}, this.doLoginOperationCompleted, userState);
    }
    
    private void OndoLoginOperationCompleted(object arg) {
        if ((this.doLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doLoginCompleted(this, new doLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#loginenc", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("session-handle-part")]
    public string doLoginEnc([System.Xml.Serialization.SoapElementAttribute("user-login")] string userlogin, [System.Xml.Serialization.SoapElementAttribute("user-hash-password")] string userhashpassword, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("hash-offset")] out int hashoffset, [System.Xml.Serialization.SoapElementAttribute("server-time")] out long servertime) {
        object[] results = this.Invoke("doLoginEnc", new object[] {
                    userlogin,
                    userhashpassword,
                    countrycode,
                    webapikey,
                    localversion});
        hashoffset = ((int)(results[1]));
        servertime = ((long)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoLoginEnc(string userlogin, string userhashpassword, int countrycode, string webapikey, long localversion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doLoginEnc", new object[] {
                    userlogin,
                    userhashpassword,
                    countrycode,
                    webapikey,
                    localversion}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoLoginEnc(System.IAsyncResult asyncResult, out int hashoffset, out long servertime) {
        object[] results = this.EndInvoke(asyncResult);
        hashoffset = ((int)(results[1]));
        servertime = ((long)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doLoginEncAsync(string userlogin, string userhashpassword, int countrycode, string webapikey, long localversion) {
        this.doLoginEncAsync(userlogin, userhashpassword, countrycode, webapikey, localversion, null);
    }
    
    /// <remarks/>
    public void doLoginEncAsync(string userlogin, string userhashpassword, int countrycode, string webapikey, long localversion, object userState) {
        if ((this.doLoginEncOperationCompleted == null)) {
            this.doLoginEncOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoLoginEncOperationCompleted);
        }
        this.InvokeAsync("doLoginEnc", new object[] {
                    userlogin,
                    userhashpassword,
                    countrycode,
                    webapikey,
                    localversion}, this.doLoginEncOperationCompleted, userState);
    }
    
    private void OndoLoginEncOperationCompleted(object arg) {
        if ((this.doLoginEncCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doLoginEncCompleted(this, new doLoginEncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#newauction", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long doNewAuction([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, FieldsValue[] fields, int @private, [System.Xml.Serialization.SoapElementAttribute("local-id")] int localid, [System.Xml.Serialization.SoapElementAttribute("item-info")] out string iteminfo) {
        object[] results = this.Invoke("doNewAuction", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid});
        iteminfo = ((string)(results[1]));
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoNewAuction(string sessionhandle, FieldsValue[] fields, int @private, int localid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doNewAuction", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid}, callback, asyncState);
    }
    
    /// <remarks/>
    public long EnddoNewAuction(System.IAsyncResult asyncResult, out string iteminfo) {
        object[] results = this.EndInvoke(asyncResult);
        iteminfo = ((string)(results[1]));
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public void doNewAuctionAsync(string sessionhandle, FieldsValue[] fields, int @private, int localid) {
        this.doNewAuctionAsync(sessionhandle, fields, @private, localid, null);
    }
    
    /// <remarks/>
    public void doNewAuctionAsync(string sessionhandle, FieldsValue[] fields, int @private, int localid, object userState) {
        if ((this.doNewAuctionOperationCompleted == null)) {
            this.doNewAuctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoNewAuctionOperationCompleted);
        }
        this.InvokeAsync("doNewAuction", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid}, this.doNewAuctionOperationCompleted, userState);
    }
    
    private void OndoNewAuctionOperationCompleted(object arg) {
        if ((this.doNewAuctionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doNewAuctionCompleted(this, new doNewAuctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#newauctionext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long doNewAuctionExt([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, FieldsValue[] fields, int @private, [System.Xml.Serialization.SoapElementAttribute("local-id")] int localid, [System.Xml.Serialization.SoapElementAttribute("item-info")] out string iteminfo) {
        object[] results = this.Invoke("doNewAuctionExt", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid});
        iteminfo = ((string)(results[1]));
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoNewAuctionExt(string sessionhandle, FieldsValue[] fields, int @private, int localid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doNewAuctionExt", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid}, callback, asyncState);
    }
    
    /// <remarks/>
    public long EnddoNewAuctionExt(System.IAsyncResult asyncResult, out string iteminfo) {
        object[] results = this.EndInvoke(asyncResult);
        iteminfo = ((string)(results[1]));
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public void doNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields, int @private, int localid) {
        this.doNewAuctionExtAsync(sessionhandle, fields, @private, localid, null);
    }
    
    /// <remarks/>
    public void doNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields, int @private, int localid, object userState) {
        if ((this.doNewAuctionExtOperationCompleted == null)) {
            this.doNewAuctionExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoNewAuctionExtOperationCompleted);
        }
        this.InvokeAsync("doNewAuctionExt", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid}, this.doNewAuctionExtOperationCompleted, userState);
    }
    
    private void OndoNewAuctionExtOperationCompleted(object arg) {
        if ((this.doNewAuctionExtCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doNewAuctionExtCompleted(this, new doNewAuctionExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellsomeagain", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("items-sell-again")]
    public StructSellAgain[] doSellSomeAgain([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("sell-items-array")] long[] sellitemsarray, [System.Xml.Serialization.SoapElementAttribute("sell-starting-time")] long sellstartingtime, [System.Xml.Serialization.SoapElementAttribute("sell-auction-duration")] int sellauctionduration, [System.Xml.Serialization.SoapElementAttribute("sell-options")] int selloptions, [System.Xml.Serialization.SoapElementAttribute("items-sell-failed")] out StructSellFailed[] itemssellfailed, [System.Xml.Serialization.SoapElementAttribute("items-sell-not-found")] out long[] itemssellnotfound) {
        object[] results = this.Invoke("doSellSomeAgain", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellauctionduration,
                    selloptions});
        itemssellfailed = ((StructSellFailed[])(results[1]));
        itemssellnotfound = ((long[])(results[2]));
        return ((StructSellAgain[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSellSomeAgain(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellauctionduration, int selloptions, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSellSomeAgain", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellauctionduration,
                    selloptions}, callback, asyncState);
    }
    
    /// <remarks/>
    public StructSellAgain[] EnddoSellSomeAgain(System.IAsyncResult asyncResult, out StructSellFailed[] itemssellfailed, out long[] itemssellnotfound) {
        object[] results = this.EndInvoke(asyncResult);
        itemssellfailed = ((StructSellFailed[])(results[1]));
        itemssellnotfound = ((long[])(results[2]));
        return ((StructSellAgain[])(results[0]));
    }
    
    /// <remarks/>
    public void doSellSomeAgainAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellauctionduration, int selloptions) {
        this.doSellSomeAgainAsync(sessionhandle, sellitemsarray, sellstartingtime, sellauctionduration, selloptions, null);
    }
    
    /// <remarks/>
    public void doSellSomeAgainAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellauctionduration, int selloptions, object userState) {
        if ((this.doSellSomeAgainOperationCompleted == null)) {
            this.doSellSomeAgainOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSellSomeAgainOperationCompleted);
        }
        this.InvokeAsync("doSellSomeAgain", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellauctionduration,
                    selloptions}, this.doSellSomeAgainOperationCompleted, userState);
    }
    
    private void OndoSellSomeAgainOperationCompleted(object arg) {
        if ((this.doSellSomeAgainCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSellSomeAgainCompleted(this, new doSellSomeAgainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#checkauction", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-price")]
    public string doCheckNewAuction([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, FieldsValue[] fields, [System.Xml.Serialization.SoapElementAttribute("item-price-desc")] out string itempricedesc) {
        object[] results = this.Invoke("doCheckNewAuction", new object[] {
                    sessionhandle,
                    fields});
        itempricedesc = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCheckNewAuction(string sessionhandle, FieldsValue[] fields, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCheckNewAuction", new object[] {
                    sessionhandle,
                    fields}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoCheckNewAuction(System.IAsyncResult asyncResult, out string itempricedesc) {
        object[] results = this.EndInvoke(asyncResult);
        itempricedesc = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doCheckNewAuctionAsync(string sessionhandle, FieldsValue[] fields) {
        this.doCheckNewAuctionAsync(sessionhandle, fields, null);
    }
    
    /// <remarks/>
    public void doCheckNewAuctionAsync(string sessionhandle, FieldsValue[] fields, object userState) {
        if ((this.doCheckNewAuctionOperationCompleted == null)) {
            this.doCheckNewAuctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckNewAuctionOperationCompleted);
        }
        this.InvokeAsync("doCheckNewAuction", new object[] {
                    sessionhandle,
                    fields}, this.doCheckNewAuctionOperationCompleted, userState);
    }
    
    private void OndoCheckNewAuctionOperationCompleted(object arg) {
        if ((this.doCheckNewAuctionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCheckNewAuctionCompleted(this, new doCheckNewAuctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#checkauctionext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-price")]
    public string doCheckNewAuctionExt([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, FieldsValue[] fields, [System.Xml.Serialization.SoapElementAttribute("item-price-desc")] out string itempricedesc) {
        object[] results = this.Invoke("doCheckNewAuctionExt", new object[] {
                    sessionhandle,
                    fields});
        itempricedesc = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCheckNewAuctionExt(string sessionhandle, FieldsValue[] fields, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCheckNewAuctionExt", new object[] {
                    sessionhandle,
                    fields}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoCheckNewAuctionExt(System.IAsyncResult asyncResult, out string itempricedesc) {
        object[] results = this.EndInvoke(asyncResult);
        itempricedesc = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doCheckNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields) {
        this.doCheckNewAuctionExtAsync(sessionhandle, fields, null);
    }
    
    /// <remarks/>
    public void doCheckNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields, object userState) {
        if ((this.doCheckNewAuctionExtOperationCompleted == null)) {
            this.doCheckNewAuctionExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckNewAuctionExtOperationCompleted);
        }
        this.InvokeAsync("doCheckNewAuctionExt", new object[] {
                    sessionhandle,
                    fields}, this.doCheckNewAuctionExtOperationCompleted, userState);
    }
    
    private void OndoCheckNewAuctionExtOperationCompleted(object arg) {
        if ((this.doCheckNewAuctionExtCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCheckNewAuctionExtCompleted(this, new doCheckNewAuctionExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#adddesc", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("array-items-add-id")]
    public long[] doAddDescToItems([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray, [System.Xml.Serialization.SoapElementAttribute("it-description")] string itdescription, [System.Xml.Serialization.SoapElementAttribute("array-items-desc-to-long")] out long[] arrayitemsdesctolong, [System.Xml.Serialization.SoapElementAttribute("array-items-not-found")] out long[] arrayitemsnotfound) {
        object[] results = this.Invoke("doAddDescToItems", new object[] {
                    sessionhandle,
                    itemsidarray,
                    itdescription});
        arrayitemsdesctolong = ((long[])(results[1]));
        arrayitemsnotfound = ((long[])(results[2]));
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoAddDescToItems(string sessionhandle, long[] itemsidarray, string itdescription, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doAddDescToItems", new object[] {
                    sessionhandle,
                    itemsidarray,
                    itdescription}, callback, asyncState);
    }
    
    /// <remarks/>
    public long[] EnddoAddDescToItems(System.IAsyncResult asyncResult, out long[] arrayitemsdesctolong, out long[] arrayitemsnotfound) {
        object[] results = this.EndInvoke(asyncResult);
        arrayitemsdesctolong = ((long[])(results[1]));
        arrayitemsnotfound = ((long[])(results[2]));
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public void doAddDescToItemsAsync(string sessionhandle, long[] itemsidarray, string itdescription) {
        this.doAddDescToItemsAsync(sessionhandle, itemsidarray, itdescription, null);
    }
    
    /// <remarks/>
    public void doAddDescToItemsAsync(string sessionhandle, long[] itemsidarray, string itdescription, object userState) {
        if ((this.doAddDescToItemsOperationCompleted == null)) {
            this.doAddDescToItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddDescToItemsOperationCompleted);
        }
        this.InvokeAsync("doAddDescToItems", new object[] {
                    sessionhandle,
                    itemsidarray,
                    itdescription}, this.doAddDescToItemsOperationCompleted, userState);
    }
    
    private void OndoAddDescToItemsOperationCompleted(object arg) {
        if ((this.doAddDescToItemsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doAddDescToItemsCompleted(this, new doAddDescToItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#checkitemidbyfuture", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long doCheckItemIdByFutureItemId([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("future-item-id")] long futureitemid) {
        object[] results = this.Invoke("doCheckItemIdByFutureItemId", new object[] {
                    webapikey,
                    countryid,
                    futureitemid});
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCheckItemIdByFutureItemId(string webapikey, int countryid, long futureitemid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCheckItemIdByFutureItemId", new object[] {
                    webapikey,
                    countryid,
                    futureitemid}, callback, asyncState);
    }
    
    /// <remarks/>
    public long EnddoCheckItemIdByFutureItemId(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public void doCheckItemIdByFutureItemIdAsync(string webapikey, int countryid, long futureitemid) {
        this.doCheckItemIdByFutureItemIdAsync(webapikey, countryid, futureitemid, null);
    }
    
    /// <remarks/>
    public void doCheckItemIdByFutureItemIdAsync(string webapikey, int countryid, long futureitemid, object userState) {
        if ((this.doCheckItemIdByFutureItemIdOperationCompleted == null)) {
            this.doCheckItemIdByFutureItemIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckItemIdByFutureItemIdOperationCompleted);
        }
        this.InvokeAsync("doCheckItemIdByFutureItemId", new object[] {
                    webapikey,
                    countryid,
                    futureitemid}, this.doCheckItemIdByFutureItemIdOperationCompleted, userState);
    }
    
    private void OndoCheckItemIdByFutureItemIdOperationCompleted(object arg) {
        if ((this.doCheckItemIdByFutureItemIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCheckItemIdByFutureItemIdCompleted(this, new doCheckItemIdByFutureItemIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#catsdatalimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cats-list")]
    public CatInfoType[] doGetCatsDataLimit([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, int offset, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetCatsDataLimit", new object[] {
                    countryid,
                    localversion,
                    webapikey,
                    offset,
                    packageelement});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetCatsDataLimit(int countryid, long localversion, string webapikey, int offset, int packageelement, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetCatsDataLimit", new object[] {
                    countryid,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, callback, asyncState);
    }
    
    /// <remarks/>
    public CatInfoType[] EnddoGetCatsDataLimit(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetCatsDataLimitAsync(int countryid, long localversion, string webapikey, int offset, int packageelement) {
        this.doGetCatsDataLimitAsync(countryid, localversion, webapikey, offset, packageelement, null);
    }
    
    /// <remarks/>
    public void doGetCatsDataLimitAsync(int countryid, long localversion, string webapikey, int offset, int packageelement, object userState) {
        if ((this.doGetCatsDataLimitOperationCompleted == null)) {
            this.doGetCatsDataLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCatsDataLimitOperationCompleted);
        }
        this.InvokeAsync("doGetCatsDataLimit", new object[] {
                    countryid,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, this.doGetCatsDataLimitOperationCompleted, userState);
    }
    
    private void OndoGetCatsDataLimitOperationCompleted(object arg) {
        if ((this.doGetCatsDataLimitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetCatsDataLimitCompleted(this, new doGetCatsDataLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getitemsinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("array-item-list-info")]
    public ItemInfoStruct[] doGetItemsInfo([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray, [System.Xml.Serialization.SoapElementAttribute("get-desc")] int getdesc, [System.Xml.Serialization.SoapElementAttribute("get-image-url")] int getimageurl, [System.Xml.Serialization.SoapElementAttribute("array-items-not-found")] out long[] arrayitemsnotfound, [System.Xml.Serialization.SoapElementAttribute("array-items-admin-killed")] out long[] arrayitemsadminkilled) {
        object[] results = this.Invoke("doGetItemsInfo", new object[] {
                    sessionhandle,
                    itemsidarray,
                    getdesc,
                    getimageurl});
        arrayitemsnotfound = ((long[])(results[1]));
        arrayitemsadminkilled = ((long[])(results[2]));
        return ((ItemInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetItemsInfo(string sessionhandle, long[] itemsidarray, int getdesc, int getimageurl, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetItemsInfo", new object[] {
                    sessionhandle,
                    itemsidarray,
                    getdesc,
                    getimageurl}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemInfoStruct[] EnddoGetItemsInfo(System.IAsyncResult asyncResult, out long[] arrayitemsnotfound, out long[] arrayitemsadminkilled) {
        object[] results = this.EndInvoke(asyncResult);
        arrayitemsnotfound = ((long[])(results[1]));
        arrayitemsadminkilled = ((long[])(results[2]));
        return ((ItemInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetItemsInfoAsync(string sessionhandle, long[] itemsidarray, int getdesc, int getimageurl) {
        this.doGetItemsInfoAsync(sessionhandle, itemsidarray, getdesc, getimageurl, null);
    }
    
    /// <remarks/>
    public void doGetItemsInfoAsync(string sessionhandle, long[] itemsidarray, int getdesc, int getimageurl, object userState) {
        if ((this.doGetItemsInfoOperationCompleted == null)) {
            this.doGetItemsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetItemsInfoOperationCompleted);
        }
        this.InvokeAsync("doGetItemsInfo", new object[] {
                    sessionhandle,
                    itemsidarray,
                    getdesc,
                    getimageurl}, this.doGetItemsInfoOperationCompleted, userState);
    }
    
    private void OndoGetItemsInfoOperationCompleted(object arg) {
        if ((this.doGetItemsInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetItemsInfoCompleted(this, new doGetItemsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#paymentdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("payment-list")]
    public BillingDataType[] doGetPaymentData([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetPaymentData", new object[] {
                    countryid,
                    webapikey});
        return ((BillingDataType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetPaymentData(int countryid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetPaymentData", new object[] {
                    countryid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public BillingDataType[] EnddoGetPaymentData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BillingDataType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetPaymentDataAsync(int countryid, string webapikey) {
        this.doGetPaymentDataAsync(countryid, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetPaymentDataAsync(int countryid, string webapikey, object userState) {
        if ((this.doGetPaymentDataOperationCompleted == null)) {
            this.doGetPaymentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPaymentDataOperationCompleted);
        }
        this.InvokeAsync("doGetPaymentData", new object[] {
                    countryid,
                    webapikey}, this.doGetPaymentDataOperationCompleted, userState);
    }
    
    private void OndoGetPaymentDataOperationCompleted(object arg) {
        if ((this.doGetPaymentDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetPaymentDataCompleted(this, new doGetPaymentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellformfields", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
    public SellFormType[] doGetSellFormFields([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetSellFormFields", new object[] {
                    countrycode,
                    localversion,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellFormFields(int countrycode, long localversion, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellFormFields", new object[] {
                    countrycode,
                    localversion,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellFormType[] EnddoGetSellFormFields(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsAsync(int countrycode, long localversion, string webapikey) {
        this.doGetSellFormFieldsAsync(countrycode, localversion, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsAsync(int countrycode, long localversion, string webapikey, object userState) {
        if ((this.doGetSellFormFieldsOperationCompleted == null)) {
            this.doGetSellFormFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsOperationCompleted);
        }
        this.InvokeAsync("doGetSellFormFields", new object[] {
                    countrycode,
                    localversion,
                    webapikey}, this.doGetSellFormFieldsOperationCompleted, userState);
    }
    
    private void OndoGetSellFormFieldsOperationCompleted(object arg) {
        if ((this.doGetSellFormFieldsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellFormFieldsCompleted(this, new doGetSellFormFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellformfieldsext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
    public SellFormType[] doGetSellFormFieldsExt([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetSellFormFieldsExt", new object[] {
                    countrycode,
                    localversion,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellFormFieldsExt(int countrycode, long localversion, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellFormFieldsExt", new object[] {
                    countrycode,
                    localversion,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellFormType[] EnddoGetSellFormFieldsExt(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsExtAsync(int countrycode, long localversion, string webapikey) {
        this.doGetSellFormFieldsExtAsync(countrycode, localversion, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsExtAsync(int countrycode, long localversion, string webapikey, object userState) {
        if ((this.doGetSellFormFieldsExtOperationCompleted == null)) {
            this.doGetSellFormFieldsExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsExtOperationCompleted);
        }
        this.InvokeAsync("doGetSellFormFieldsExt", new object[] {
                    countrycode,
                    localversion,
                    webapikey}, this.doGetSellFormFieldsExtOperationCompleted, userState);
    }
    
    private void OndoGetSellFormFieldsExtOperationCompleted(object arg) {
        if ((this.doGetSellFormFieldsExtCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellFormFieldsExtCompleted(this, new doGetSellFormFieldsExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sitesflaginfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sites-info-list")]
    public SiteFlagInfoType[] doGetSitesFlagInfo([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetSitesFlagInfo", new object[] {
                    countrycode,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SiteFlagInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSitesFlagInfo(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSitesFlagInfo", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public SiteFlagInfoType[] EnddoGetSitesFlagInfo(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SiteFlagInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSitesFlagInfoAsync(int countrycode, string webapikey) {
        this.doGetSitesFlagInfoAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetSitesFlagInfoAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetSitesFlagInfoOperationCompleted == null)) {
            this.doGetSitesFlagInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSitesFlagInfoOperationCompleted);
        }
        this.InvokeAsync("doGetSitesFlagInfo", new object[] {
                    countrycode,
                    webapikey}, this.doGetSitesFlagInfoOperationCompleted, userState);
    }
    
    private void OndoGetSitesFlagInfoOperationCompleted(object arg) {
        if ((this.doGetSitesFlagInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSitesFlagInfoCompleted(this, new doGetSitesFlagInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sitesinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sites-info-list")]
    public SiteInfoType[] doGetSitesInfo([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetSitesInfo", new object[] {
                    countrycode,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SiteInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSitesInfo(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSitesInfo", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public SiteInfoType[] EnddoGetSitesInfo(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SiteInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSitesInfoAsync(int countrycode, string webapikey) {
        this.doGetSitesInfoAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetSitesInfoAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetSitesInfoOperationCompleted == null)) {
            this.doGetSitesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSitesInfoOperationCompleted);
        }
        this.InvokeAsync("doGetSitesInfo", new object[] {
                    countrycode,
                    webapikey}, this.doGetSitesInfoOperationCompleted, userState);
    }
    
    private void OndoGetSitesInfoOperationCompleted(object arg) {
        if ((this.doGetSitesInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSitesInfoCompleted(this, new doGetSitesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsystemtime", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("server-time")]
    public long doGetSystemTime([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetSystemTime", new object[] {
                    countryid,
                    webapikey});
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSystemTime(int countryid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSystemTime", new object[] {
                    countryid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public long EnddoGetSystemTime(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public void doGetSystemTimeAsync(int countryid, string webapikey) {
        this.doGetSystemTimeAsync(countryid, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetSystemTimeAsync(int countryid, string webapikey, object userState) {
        if ((this.doGetSystemTimeOperationCompleted == null)) {
            this.doGetSystemTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSystemTimeOperationCompleted);
        }
        this.InvokeAsync("doGetSystemTime", new object[] {
                    countryid,
                    webapikey}, this.doGetSystemTimeOperationCompleted, userState);
    }
    
    private void OndoGetSystemTimeOperationCompleted(object arg) {
        if ((this.doGetSystemTimeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSystemTimeCompleted(this, new doGetSystemTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getuserid", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-id")]
    public int doGetUserID([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("user-login")] string userlogin, [System.Xml.Serialization.SoapElementAttribute("user-email")] string useremail) {
        object[] results = this.Invoke("doGetUserID", new object[] {
                    countryid,
                    userlogin,
                    useremail});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetUserID(int countryid, string userlogin, string useremail, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetUserID", new object[] {
                    countryid,
                    userlogin,
                    useremail}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetUserID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetUserIDAsync(int countryid, string userlogin, string useremail) {
        this.doGetUserIDAsync(countryid, userlogin, useremail, null);
    }
    
    /// <remarks/>
    public void doGetUserIDAsync(int countryid, string userlogin, string useremail, object userState) {
        if ((this.doGetUserIDOperationCompleted == null)) {
            this.doGetUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserIDOperationCompleted);
        }
        this.InvokeAsync("doGetUserID", new object[] {
                    countryid,
                    userlogin,
                    useremail}, this.doGetUserIDOperationCompleted, userState);
    }
    
    private void OndoGetUserIDOperationCompleted(object arg) {
        if ((this.doGetUserIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetUserIDCompleted(this, new doGetUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getuseritems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-item-list")]
    public UserItemList[] doGetUserItems([System.Xml.Serialization.SoapElementAttribute("user-id")] int userid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, int offset, [System.Xml.Serialization.SoapElementAttribute("user-item-count")] out int useritemcount) {
        object[] results = this.Invoke("doGetUserItems", new object[] {
                    userid,
                    webapikey,
                    countryid,
                    offset});
        useritemcount = ((int)(results[1]));
        return ((UserItemList[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetUserItems(int userid, string webapikey, int countryid, int offset, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetUserItems", new object[] {
                    userid,
                    webapikey,
                    countryid,
                    offset}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserItemList[] EnddoGetUserItems(System.IAsyncResult asyncResult, out int useritemcount) {
        object[] results = this.EndInvoke(asyncResult);
        useritemcount = ((int)(results[1]));
        return ((UserItemList[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetUserItemsAsync(int userid, string webapikey, int countryid, int offset) {
        this.doGetUserItemsAsync(userid, webapikey, countryid, offset, null);
    }
    
    /// <remarks/>
    public void doGetUserItemsAsync(int userid, string webapikey, int countryid, int offset, object userState) {
        if ((this.doGetUserItemsOperationCompleted == null)) {
            this.doGetUserItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserItemsOperationCompleted);
        }
        this.InvokeAsync("doGetUserItems", new object[] {
                    userid,
                    webapikey,
                    countryid,
                    offset}, this.doGetUserItemsOperationCompleted, userState);
    }
    
    private void OndoGetUserItemsOperationCompleted(object arg) {
        if ((this.doGetUserItemsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetUserItemsCompleted(this, new doGetUserItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getuserlogin", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-login")]
    public string doGetUserLogin([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("user-id")] int userid) {
        object[] results = this.Invoke("doGetUserLogin", new object[] {
                    countryid,
                    userid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetUserLogin(int countryid, int userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetUserLogin", new object[] {
                    countryid,
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoGetUserLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doGetUserLoginAsync(int countryid, int userid) {
        this.doGetUserLoginAsync(countryid, userid, null);
    }
    
    /// <remarks/>
    public void doGetUserLoginAsync(int countryid, int userid, object userState) {
        if ((this.doGetUserLoginOperationCompleted == null)) {
            this.doGetUserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserLoginOperationCompleted);
        }
        this.InvokeAsync("doGetUserLogin", new object[] {
                    countryid,
                    userid}, this.doGetUserLoginOperationCompleted, userState);
    }
    
    private void OndoGetUserLoginOperationCompleted(object arg) {
        if ((this.doGetUserLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetUserLoginCompleted(this, new doGetUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#queryallstatus", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sys-country-status")]
    public SysStatusType[] doQueryAllSysStatus([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doQueryAllSysStatus", new object[] {
                    countryid,
                    webapikey});
        return ((SysStatusType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoQueryAllSysStatus(int countryid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doQueryAllSysStatus", new object[] {
                    countryid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public SysStatusType[] EnddoQueryAllSysStatus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SysStatusType[])(results[0]));
    }
    
    /// <remarks/>
    public void doQueryAllSysStatusAsync(int countryid, string webapikey) {
        this.doQueryAllSysStatusAsync(countryid, webapikey, null);
    }
    
    /// <remarks/>
    public void doQueryAllSysStatusAsync(int countryid, string webapikey, object userState) {
        if ((this.doQueryAllSysStatusOperationCompleted == null)) {
            this.doQueryAllSysStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoQueryAllSysStatusOperationCompleted);
        }
        this.InvokeAsync("doQueryAllSysStatus", new object[] {
                    countryid,
                    webapikey}, this.doQueryAllSysStatusOperationCompleted, userState);
    }
    
    private void OndoQueryAllSysStatusOperationCompleted(object arg) {
        if ((this.doQueryAllSysStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doQueryAllSysStatusCompleted(this, new doQueryAllSysStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellformfieldsextlimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
    public SellFormType[] doGetSellFormFieldsExtLimit([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, int offset, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr, [System.Xml.Serialization.SoapElementAttribute("form-fields-count")] out int formfieldscount) {
        object[] results = this.Invoke("doGetSellFormFieldsExtLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        formfieldscount = ((int)(results[3]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellFormFieldsExtLimit(int countrycode, long localversion, string webapikey, int offset, int packageelement, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellFormFieldsExtLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellFormType[] EnddoGetSellFormFieldsExtLimit(System.IAsyncResult asyncResult, out long verkey, out string verstr, out int formfieldscount) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        formfieldscount = ((int)(results[3]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsExtLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement) {
        this.doGetSellFormFieldsExtLimitAsync(countrycode, localversion, webapikey, offset, packageelement, null);
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsExtLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement, object userState) {
        if ((this.doGetSellFormFieldsExtLimitOperationCompleted == null)) {
            this.doGetSellFormFieldsExtLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsExtLimitOperationCompleted);
        }
        this.InvokeAsync("doGetSellFormFieldsExtLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, this.doGetSellFormFieldsExtLimitOperationCompleted, userState);
    }
    
    private void OndoGetSellFormFieldsExtLimitOperationCompleted(object arg) {
        if ((this.doGetSellFormFieldsExtLimitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellFormFieldsExtLimitCompleted(this, new doGetSellFormFieldsExtLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellformfieldslimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
    public SellFormType[] doGetSellFormFieldsLimit([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, int offset, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr, [System.Xml.Serialization.SoapElementAttribute("form-fields-count")] out int formfieldscount) {
        object[] results = this.Invoke("doGetSellFormFieldsLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        formfieldscount = ((int)(results[3]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellFormFieldsLimit(int countrycode, long localversion, string webapikey, int offset, int packageelement, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellFormFieldsLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellFormType[] EnddoGetSellFormFieldsLimit(System.IAsyncResult asyncResult, out long verkey, out string verstr, out int formfieldscount) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        formfieldscount = ((int)(results[3]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement) {
        this.doGetSellFormFieldsLimitAsync(countrycode, localversion, webapikey, offset, packageelement, null);
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement, object userState) {
        if ((this.doGetSellFormFieldsLimitOperationCompleted == null)) {
            this.doGetSellFormFieldsLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsLimitOperationCompleted);
        }
        this.InvokeAsync("doGetSellFormFieldsLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, this.doGetSellFormFieldsLimitOperationCompleted, userState);
    }
    
    private void OndoGetSellFormFieldsLimitOperationCompleted(object arg) {
        if ((this.doGetSellFormFieldsLimitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellFormFieldsLimitCompleted(this, new doGetSellFormFieldsLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#querystatus", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("info")]
    public string doQuerySysStatus(int sysvar, [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey) {
        object[] results = this.Invoke("doQuerySysStatus", new object[] {
                    sysvar,
                    countryid,
                    webapikey});
        verkey = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoQuerySysStatus(int sysvar, int countryid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doQuerySysStatus", new object[] {
                    sysvar,
                    countryid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoQuerySysStatus(System.IAsyncResult asyncResult, out long verkey) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doQuerySysStatusAsync(int sysvar, int countryid, string webapikey) {
        this.doQuerySysStatusAsync(sysvar, countryid, webapikey, null);
    }
    
    /// <remarks/>
    public void doQuerySysStatusAsync(int sysvar, int countryid, string webapikey, object userState) {
        if ((this.doQuerySysStatusOperationCompleted == null)) {
            this.doQuerySysStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoQuerySysStatusOperationCompleted);
        }
        this.InvokeAsync("doQuerySysStatus", new object[] {
                    sysvar,
                    countryid,
                    webapikey}, this.doQuerySysStatusOperationCompleted, userState);
    }
    
    private void OndoQuerySysStatusOperationCompleted(object arg) {
        if ((this.doQuerySysStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doQuerySysStatusCompleted(this, new doQuerySysStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#showcat", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cat-parent-array")]
    public InfoCatList[] doShowCat([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("cat-id")] int catid, [System.Xml.Serialization.SoapElementAttribute("cat-item-state")] int catitemstate, [System.Xml.Serialization.SoapElementAttribute("cat-item-option")] int catitemoption, [System.Xml.Serialization.SoapElementAttribute("cat-item-duration-option")] DurationTimeInfo catitemdurationoption, [System.Xml.Serialization.SoapElementAttribute("cat-attrib-fields")] FieldsValue[] catattribfields, [System.Xml.Serialization.SoapElementAttribute("cat-sort-options")] int catsortoptions, [System.Xml.Serialization.SoapElementAttribute("cat-items-price")] PriceCatInfo catitemsprice, [System.Xml.Serialization.SoapElementAttribute("cat-items-offset")] int catitemsoffset, [System.Xml.Serialization.SoapElementAttribute("cat-child-array")] out InfoCatList[] catchildarray, [System.Xml.Serialization.SoapElementAttribute("cat-sister-array")] out InfoCatList[] catsisterarray, [System.Xml.Serialization.SoapElementAttribute("cat-items-count")] out int catitemscount, [System.Xml.Serialization.SoapElementAttribute("cat-items-count-featured")] out int catitemscountfeatured, [System.Xml.Serialization.SoapElementAttribute("cat-items-array")] out SearchResponseType[] catitemsarray) {
        object[] results = this.Invoke("doShowCat", new object[] {
                    sessionhandle,
                    catid,
                    catitemstate,
                    catitemoption,
                    catitemdurationoption,
                    catattribfields,
                    catsortoptions,
                    catitemsprice,
                    catitemsoffset});
        catchildarray = ((InfoCatList[])(results[1]));
        catsisterarray = ((InfoCatList[])(results[2]));
        catitemscount = ((int)(results[3]));
        catitemscountfeatured = ((int)(results[4]));
        catitemsarray = ((SearchResponseType[])(results[5]));
        return ((InfoCatList[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoShowCat(string sessionhandle, int catid, int catitemstate, int catitemoption, DurationTimeInfo catitemdurationoption, FieldsValue[] catattribfields, int catsortoptions, PriceCatInfo catitemsprice, int catitemsoffset, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doShowCat", new object[] {
                    sessionhandle,
                    catid,
                    catitemstate,
                    catitemoption,
                    catitemdurationoption,
                    catattribfields,
                    catsortoptions,
                    catitemsprice,
                    catitemsoffset}, callback, asyncState);
    }
    
    /// <remarks/>
    public InfoCatList[] EnddoShowCat(System.IAsyncResult asyncResult, out InfoCatList[] catchildarray, out InfoCatList[] catsisterarray, out int catitemscount, out int catitemscountfeatured, out SearchResponseType[] catitemsarray) {
        object[] results = this.EndInvoke(asyncResult);
        catchildarray = ((InfoCatList[])(results[1]));
        catsisterarray = ((InfoCatList[])(results[2]));
        catitemscount = ((int)(results[3]));
        catitemscountfeatured = ((int)(results[4]));
        catitemsarray = ((SearchResponseType[])(results[5]));
        return ((InfoCatList[])(results[0]));
    }
    
    /// <remarks/>
    public void doShowCatAsync(string sessionhandle, int catid, int catitemstate, int catitemoption, DurationTimeInfo catitemdurationoption, FieldsValue[] catattribfields, int catsortoptions, PriceCatInfo catitemsprice, int catitemsoffset) {
        this.doShowCatAsync(sessionhandle, catid, catitemstate, catitemoption, catitemdurationoption, catattribfields, catsortoptions, catitemsprice, catitemsoffset, null);
    }
    
    /// <remarks/>
    public void doShowCatAsync(string sessionhandle, int catid, int catitemstate, int catitemoption, DurationTimeInfo catitemdurationoption, FieldsValue[] catattribfields, int catsortoptions, PriceCatInfo catitemsprice, int catitemsoffset, object userState) {
        if ((this.doShowCatOperationCompleted == null)) {
            this.doShowCatOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowCatOperationCompleted);
        }
        this.InvokeAsync("doShowCat", new object[] {
                    sessionhandle,
                    catid,
                    catitemstate,
                    catitemoption,
                    catitemdurationoption,
                    catattribfields,
                    catsortoptions,
                    catitemsprice,
                    catitemsoffset}, this.doShowCatOperationCompleted, userState);
    }
    
    private void OndoShowCatOperationCompleted(object arg) {
        if ((this.doShowCatCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doShowCatCompleted(this, new doShowCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#showiteminfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-list-info")]
    public ItemInfo doShowItemInfo([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("get-desc")] int getdesc, [System.Xml.Serialization.SoapElementAttribute("get-image-url")] int getimageurl, [System.Xml.Serialization.SoapElementAttribute("item-cat-path")] out ItemCatList[] itemcatpath, [System.Xml.Serialization.SoapElementAttribute("item-img-list")] out ItemImageList[] itemimglist) {
        object[] results = this.Invoke("doShowItemInfo", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl});
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        return ((ItemInfo)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoShowItemInfo(string sessionhandle, long itemid, int getdesc, int getimageurl, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doShowItemInfo", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemInfo EnddoShowItemInfo(System.IAsyncResult asyncResult, out ItemCatList[] itemcatpath, out ItemImageList[] itemimglist) {
        object[] results = this.EndInvoke(asyncResult);
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        return ((ItemInfo)(results[0]));
    }
    
    /// <remarks/>
    public void doShowItemInfoAsync(string sessionhandle, long itemid, int getdesc, int getimageurl) {
        this.doShowItemInfoAsync(sessionhandle, itemid, getdesc, getimageurl, null);
    }
    
    /// <remarks/>
    public void doShowItemInfoAsync(string sessionhandle, long itemid, int getdesc, int getimageurl, object userState) {
        if ((this.doShowItemInfoOperationCompleted == null)) {
            this.doShowItemInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowItemInfoOperationCompleted);
        }
        this.InvokeAsync("doShowItemInfo", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl}, this.doShowItemInfoOperationCompleted, userState);
    }
    
    private void OndoShowItemInfoOperationCompleted(object arg) {
        if ((this.doShowItemInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doShowItemInfoCompleted(this, new doShowItemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#showuser", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-country")]
    public int doShowUser(
                [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, 
                [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, 
                [System.Xml.Serialization.SoapElementAttribute("user-id")] ref long userid, 
                [System.Xml.Serialization.SoapElementAttribute("user-login")] ref string userlogin, 
                [System.Xml.Serialization.SoapElementAttribute("user-create-date")] out long usercreatedate, 
                [System.Xml.Serialization.SoapElementAttribute("user-login-date")] out long userlogindate, 
                [System.Xml.Serialization.SoapElementAttribute("user-rating")] out int userrating, 
                [System.Xml.Serialization.SoapElementAttribute("user-is-new-user")] out int userisnewuser, 
                [System.Xml.Serialization.SoapElementAttribute("user-not-activated")] out int usernotactivated, 
                [System.Xml.Serialization.SoapElementAttribute("user-closed")] out int userclosed, 
                [System.Xml.Serialization.SoapElementAttribute("user-blocked")] out int userblocked, 
                [System.Xml.Serialization.SoapElementAttribute("user-terminated")] out int userterminated, 
                [System.Xml.Serialization.SoapElementAttribute("user-has-page")] out int userhaspage, 
                [System.Xml.Serialization.SoapElementAttribute("user-is-sseller")] out int userissseller, 
                [System.Xml.Serialization.SoapElementAttribute("user-positive-feedback")] out ShowUserFeedbacks userpositivefeedback, 
                [System.Xml.Serialization.SoapElementAttribute("user-negative-feedback")] out ShowUserFeedbacks usernegativefeedback, 
                [System.Xml.Serialization.SoapElementAttribute("user-neutral-feedback")] out ShowUserFeedbacks userneutralfeedback) {
        object[] results = this.Invoke("doShowUser", new object[] {
                    webapikey,
                    countryid,
                    userid,
                    userlogin});
        userid = ((long)(results[1]));
        userlogin = ((string)(results[2]));
        usercreatedate = ((long)(results[3]));
        userlogindate = ((long)(results[4]));
        userrating = ((int)(results[5]));
        userisnewuser = ((int)(results[6]));
        usernotactivated = ((int)(results[7]));
        userclosed = ((int)(results[8]));
        userblocked = ((int)(results[9]));
        userterminated = ((int)(results[10]));
        userhaspage = ((int)(results[11]));
        userissseller = ((int)(results[12]));
        userpositivefeedback = ((ShowUserFeedbacks)(results[13]));
        usernegativefeedback = ((ShowUserFeedbacks)(results[14]));
        userneutralfeedback = ((ShowUserFeedbacks)(results[15]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoShowUser(string webapikey, int countryid, long userid, string userlogin, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doShowUser", new object[] {
                    webapikey,
                    countryid,
                    userid,
                    userlogin}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoShowUser(
                System.IAsyncResult asyncResult, 
                out long userid, 
                out string userlogin, 
                out long usercreatedate, 
                out long userlogindate, 
                out int userrating, 
                out int userisnewuser, 
                out int usernotactivated, 
                out int userclosed, 
                out int userblocked, 
                out int userterminated, 
                out int userhaspage, 
                out int userissseller, 
                out ShowUserFeedbacks userpositivefeedback, 
                out ShowUserFeedbacks usernegativefeedback, 
                out ShowUserFeedbacks userneutralfeedback) {
        object[] results = this.EndInvoke(asyncResult);
        userid = ((long)(results[1]));
        userlogin = ((string)(results[2]));
        usercreatedate = ((long)(results[3]));
        userlogindate = ((long)(results[4]));
        userrating = ((int)(results[5]));
        userisnewuser = ((int)(results[6]));
        usernotactivated = ((int)(results[7]));
        userclosed = ((int)(results[8]));
        userblocked = ((int)(results[9]));
        userterminated = ((int)(results[10]));
        userhaspage = ((int)(results[11]));
        userissseller = ((int)(results[12]));
        userpositivefeedback = ((ShowUserFeedbacks)(results[13]));
        usernegativefeedback = ((ShowUserFeedbacks)(results[14]));
        userneutralfeedback = ((ShowUserFeedbacks)(results[15]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doShowUserAsync(string webapikey, int countryid, long userid, string userlogin) {
        this.doShowUserAsync(webapikey, countryid, userid, userlogin, null);
    }
    
    /// <remarks/>
    public void doShowUserAsync(string webapikey, int countryid, long userid, string userlogin, object userState) {
        if ((this.doShowUserOperationCompleted == null)) {
            this.doShowUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowUserOperationCompleted);
        }
        this.InvokeAsync("doShowUser", new object[] {
                    webapikey,
                    countryid,
                    userid,
                    userlogin}, this.doShowUserOperationCompleted, userState);
    }
    
    private void OndoShowUserOperationCompleted(object arg) {
        if ((this.doShowUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doShowUserCompleted(this, new doShowUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#verifyitem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long doVerifyItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("local-id")] int localid) {
        object[] results = this.Invoke("doVerifyItem", new object[] {
                    sessionhandle,
                    localid});
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoVerifyItem(string sessionhandle, int localid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doVerifyItem", new object[] {
                    sessionhandle,
                    localid}, callback, asyncState);
    }
    
    /// <remarks/>
    public long EnddoVerifyItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public void doVerifyItemAsync(string sessionhandle, int localid) {
        this.doVerifyItemAsync(sessionhandle, localid, null);
    }
    
    /// <remarks/>
    public void doVerifyItemAsync(string sessionhandle, int localid, object userState) {
        if ((this.doVerifyItemOperationCompleted == null)) {
            this.doVerifyItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoVerifyItemOperationCompleted);
        }
        this.InvokeAsync("doVerifyItem", new object[] {
                    sessionhandle,
                    localid}, this.doVerifyItemOperationCompleted, userState);
    }
    
    private void OndoVerifyItemOperationCompleted(object arg) {
        if ((this.doVerifyItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doVerifyItemCompleted(this, new doVerifyItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#addwatch", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("array-items-add-id")]
    public long[] doAddWatchList([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray, [System.Xml.Serialization.SoapElementAttribute("array-items-not-found")] out long[] arrayitemsnotfound, [System.Xml.Serialization.SoapElementAttribute("array-items-admin-killed")] out long[] arrayitemsadminkilled) {
        object[] results = this.Invoke("doAddWatchList", new object[] {
                    sessionhandle,
                    itemsidarray});
        arrayitemsnotfound = ((long[])(results[1]));
        arrayitemsadminkilled = ((long[])(results[2]));
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoAddWatchList(string sessionhandle, long[] itemsidarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doAddWatchList", new object[] {
                    sessionhandle,
                    itemsidarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public long[] EnddoAddWatchList(System.IAsyncResult asyncResult, out long[] arrayitemsnotfound, out long[] arrayitemsadminkilled) {
        object[] results = this.EndInvoke(asyncResult);
        arrayitemsnotfound = ((long[])(results[1]));
        arrayitemsadminkilled = ((long[])(results[2]));
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public void doAddWatchListAsync(string sessionhandle, long[] itemsidarray) {
        this.doAddWatchListAsync(sessionhandle, itemsidarray, null);
    }
    
    /// <remarks/>
    public void doAddWatchListAsync(string sessionhandle, long[] itemsidarray, object userState) {
        if ((this.doAddWatchListOperationCompleted == null)) {
            this.doAddWatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddWatchListOperationCompleted);
        }
        this.InvokeAsync("doAddWatchList", new object[] {
                    sessionhandle,
                    itemsidarray}, this.doAddWatchListOperationCompleted, userState);
    }
    
    private void OndoAddWatchListOperationCompleted(object arg) {
        if ((this.doAddWatchListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doAddWatchListCompleted(this, new doAddWatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#feedback", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("feedback-id")]
    public int doFeedback([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("fe-item-id")] int feitemid, [System.Xml.Serialization.SoapElementAttribute("fe-from-user-id")] int fefromuserid, [System.Xml.Serialization.SoapElementAttribute("fe-to-user-id")] int fetouserid, [System.Xml.Serialization.SoapElementAttribute("fe-comment")] string fecomment, [System.Xml.Serialization.SoapElementAttribute("fe-comment-type")] string fecommenttype, [System.Xml.Serialization.SoapElementAttribute("fe-op")] int feop) {
        object[] results = this.Invoke("doFeedback", new object[] {
                    sessionhandle,
                    feitemid,
                    fefromuserid,
                    fetouserid,
                    fecomment,
                    fecommenttype,
                    feop});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoFeedback(string sessionhandle, int feitemid, int fefromuserid, int fetouserid, string fecomment, string fecommenttype, int feop, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doFeedback", new object[] {
                    sessionhandle,
                    feitemid,
                    fefromuserid,
                    fetouserid,
                    fecomment,
                    fecommenttype,
                    feop}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoFeedback(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doFeedbackAsync(string sessionhandle, int feitemid, int fefromuserid, int fetouserid, string fecomment, string fecommenttype, int feop) {
        this.doFeedbackAsync(sessionhandle, feitemid, fefromuserid, fetouserid, fecomment, fecommenttype, feop, null);
    }
    
    /// <remarks/>
    public void doFeedbackAsync(string sessionhandle, int feitemid, int fefromuserid, int fetouserid, string fecomment, string fecommenttype, int feop, object userState) {
        if ((this.doFeedbackOperationCompleted == null)) {
            this.doFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFeedbackOperationCompleted);
        }
        this.InvokeAsync("doFeedback", new object[] {
                    sessionhandle,
                    feitemid,
                    fefromuserid,
                    fetouserid,
                    fecomment,
                    fecommenttype,
                    feop}, this.doFeedbackOperationCompleted, userState);
    }
    
    private void OndoFeedbackOperationCompleted(object arg) {
        if ((this.doFeedbackCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doFeedbackCompleted(this, new doFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getbiditem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("biditem-list")]
    public string[][] doGetBidItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid) {
        object[] results = this.Invoke("doGetBidItem", new object[] {
                    sessionhandle,
                    itemid});
        return ((string[][])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetBidItem(string sessionhandle, long itemid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetBidItem", new object[] {
                    sessionhandle,
                    itemid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[][] EnddoGetBidItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[][])(results[0]));
    }
    
    /// <remarks/>
    public void doGetBidItemAsync(string sessionhandle, long itemid) {
        this.doGetBidItemAsync(sessionhandle, itemid, null);
    }
    
    /// <remarks/>
    public void doGetBidItemAsync(string sessionhandle, long itemid, object userState) {
        if ((this.doGetBidItemOperationCompleted == null)) {
            this.doGetBidItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetBidItemOperationCompleted);
        }
        this.InvokeAsync("doGetBidItem", new object[] {
                    sessionhandle,
                    itemid}, this.doGetBidItemOperationCompleted, userState);
    }
    
    private void OndoGetBidItemOperationCompleted(object arg) {
        if ((this.doGetBidItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetBidItemCompleted(this, new doGetBidItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getbiditem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("biditem-list")]
    public BidListStruct2[] doGetBidItem2([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid) {
        object[] results = this.Invoke("doGetBidItem2", new object[] {
                    sessionhandle,
                    itemid});
        return ((BidListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetBidItem2(string sessionhandle, long itemid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetBidItem2", new object[] {
                    sessionhandle,
                    itemid}, callback, asyncState);
    }
    
    /// <remarks/>
    public BidListStruct2[] EnddoGetBidItem2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BidListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetBidItem2Async(string sessionhandle, long itemid) {
        this.doGetBidItem2Async(sessionhandle, itemid, null);
    }
    
    /// <remarks/>
    public void doGetBidItem2Async(string sessionhandle, long itemid, object userState) {
        if ((this.doGetBidItem2OperationCompleted == null)) {
            this.doGetBidItem2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetBidItem2OperationCompleted);
        }
        this.InvokeAsync("doGetBidItem2", new object[] {
                    sessionhandle,
                    itemid}, this.doGetBidItem2OperationCompleted, userState);
    }
    
    private void OndoGetBidItem2OperationCompleted(object arg) {
        if ((this.doGetBidItem2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetBidItem2Completed(this, new doGetBidItem2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getfeedback", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("feedback-list")]
    public FeedbackList[] doGetFeedback([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-from")] int feedbackfrom, [System.Xml.Serialization.SoapElementAttribute("feedback-to")] int feedbackto, [System.Xml.Serialization.SoapElementAttribute("feedback-offset")] string feedbackoffset, [System.Xml.Serialization.SoapElementAttribute("feedback-kind-list")] string feedbackkindlist, [System.Xml.Serialization.SoapElementAttribute("feedback-count")] out int feedbackcount) {
        object[] results = this.Invoke("doGetFeedback", new object[] {
                    sessionhandle,
                    feedbackfrom,
                    feedbackto,
                    feedbackoffset,
                    feedbackkindlist});
        feedbackcount = ((int)(results[1]));
        return ((FeedbackList[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetFeedback(string sessionhandle, int feedbackfrom, int feedbackto, string feedbackoffset, string feedbackkindlist, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetFeedback", new object[] {
                    sessionhandle,
                    feedbackfrom,
                    feedbackto,
                    feedbackoffset,
                    feedbackkindlist}, callback, asyncState);
    }
    
    /// <remarks/>
    public FeedbackList[] EnddoGetFeedback(System.IAsyncResult asyncResult, out int feedbackcount) {
        object[] results = this.EndInvoke(asyncResult);
        feedbackcount = ((int)(results[1]));
        return ((FeedbackList[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetFeedbackAsync(string sessionhandle, int feedbackfrom, int feedbackto, string feedbackoffset, string feedbackkindlist) {
        this.doGetFeedbackAsync(sessionhandle, feedbackfrom, feedbackto, feedbackoffset, feedbackkindlist, null);
    }
    
    /// <remarks/>
    public void doGetFeedbackAsync(string sessionhandle, int feedbackfrom, int feedbackto, string feedbackoffset, string feedbackkindlist, object userState) {
        if ((this.doGetFeedbackOperationCompleted == null)) {
            this.doGetFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetFeedbackOperationCompleted);
        }
        this.InvokeAsync("doGetFeedback", new object[] {
                    sessionhandle,
                    feedbackfrom,
                    feedbackto,
                    feedbackoffset,
                    feedbackkindlist}, this.doGetFeedbackOperationCompleted, userState);
    }
    
    private void OndoGetFeedbackOperationCompleted(object arg) {
        if ((this.doGetFeedbackCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetFeedbackCompleted(this, new doGetFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getsitejournal", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("site-journal-array")]
    public SiteJournal[] doGetSiteJournal([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("starting-point")] int startingpoint, [System.Xml.Serialization.SoapElementAttribute("info-type")] int infotype) {
        object[] results = this.Invoke("doGetSiteJournal", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype});
        return ((SiteJournal[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSiteJournal(string sessionhandle, int startingpoint, int infotype, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSiteJournal", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype}, callback, asyncState);
    }
    
    /// <remarks/>
    public SiteJournal[] EnddoGetSiteJournal(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SiteJournal[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSiteJournalAsync(string sessionhandle, int startingpoint, int infotype) {
        this.doGetSiteJournalAsync(sessionhandle, startingpoint, infotype, null);
    }
    
    /// <remarks/>
    public void doGetSiteJournalAsync(string sessionhandle, int startingpoint, int infotype, object userState) {
        if ((this.doGetSiteJournalOperationCompleted == null)) {
            this.doGetSiteJournalOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSiteJournalOperationCompleted);
        }
        this.InvokeAsync("doGetSiteJournal", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype}, this.doGetSiteJournalOperationCompleted, userState);
    }
    
    private void OndoGetSiteJournalOperationCompleted(object arg) {
        if ((this.doGetSiteJournalCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSiteJournalCompleted(this, new doGetSiteJournalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getsitejournalinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("site-journal-info")]
    public SiteJournalInfo doGetSiteJournalInfo([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("starting-point")] int startingpoint, [System.Xml.Serialization.SoapElementAttribute("info-type")] int infotype) {
        object[] results = this.Invoke("doGetSiteJournalInfo", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype});
        return ((SiteJournalInfo)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSiteJournalInfo(string sessionhandle, int startingpoint, int infotype, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSiteJournalInfo", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype}, callback, asyncState);
    }
    
    /// <remarks/>
    public SiteJournalInfo EnddoGetSiteJournalInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SiteJournalInfo)(results[0]));
    }
    
    /// <remarks/>
    public void doGetSiteJournalInfoAsync(string sessionhandle, int startingpoint, int infotype) {
        this.doGetSiteJournalInfoAsync(sessionhandle, startingpoint, infotype, null);
    }
    
    /// <remarks/>
    public void doGetSiteJournalInfoAsync(string sessionhandle, int startingpoint, int infotype, object userState) {
        if ((this.doGetSiteJournalInfoOperationCompleted == null)) {
            this.doGetSiteJournalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSiteJournalInfoOperationCompleted);
        }
        this.InvokeAsync("doGetSiteJournalInfo", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype}, this.doGetSiteJournalInfoOperationCompleted, userState);
    }
    
    private void OndoGetSiteJournalInfoOperationCompleted(object arg) {
        if ((this.doGetSiteJournalInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSiteJournalInfoCompleted(this, new doGetSiteJournalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#myaccount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("myaccount-list")]
    public string[][] doMyAccount([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("account-type")] string accounttype, int offset, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray) {
        object[] results = this.Invoke("doMyAccount", new object[] {
                    sessionhandle,
                    accounttype,
                    offset,
                    itemsarray});
        return ((string[][])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyAccount(string sessionhandle, string accounttype, int offset, int[] itemsarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyAccount", new object[] {
                    sessionhandle,
                    accounttype,
                    offset,
                    itemsarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[][] EnddoMyAccount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[][])(results[0]));
    }
    
    /// <remarks/>
    public void doMyAccountAsync(string sessionhandle, string accounttype, int offset, int[] itemsarray) {
        this.doMyAccountAsync(sessionhandle, accounttype, offset, itemsarray, null);
    }
    
    /// <remarks/>
    public void doMyAccountAsync(string sessionhandle, string accounttype, int offset, int[] itemsarray, object userState) {
        if ((this.doMyAccountOperationCompleted == null)) {
            this.doMyAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyAccountOperationCompleted);
        }
        this.InvokeAsync("doMyAccount", new object[] {
                    sessionhandle,
                    accounttype,
                    offset,
                    itemsarray}, this.doMyAccountOperationCompleted, userState);
    }
    
    private void OndoMyAccountOperationCompleted(object arg) {
        if ((this.doMyAccountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyAccountCompleted(this, new doMyAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#myaccount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("myaccount-list")]
    public MyAccountStruct2[] doMyAccount2([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("account-type")] string accounttype, int offset, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray) {
        object[] results = this.Invoke("doMyAccount2", new object[] {
                    sessionhandle,
                    accounttype,
                    offset,
                    itemsarray});
        return ((MyAccountStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyAccount2(string sessionhandle, string accounttype, int offset, int[] itemsarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyAccount2", new object[] {
                    sessionhandle,
                    accounttype,
                    offset,
                    itemsarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public MyAccountStruct2[] EnddoMyAccount2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MyAccountStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public void doMyAccount2Async(string sessionhandle, string accounttype, int offset, int[] itemsarray) {
        this.doMyAccount2Async(sessionhandle, accounttype, offset, itemsarray, null);
    }
    
    /// <remarks/>
    public void doMyAccount2Async(string sessionhandle, string accounttype, int offset, int[] itemsarray, object userState) {
        if ((this.doMyAccount2OperationCompleted == null)) {
            this.doMyAccount2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyAccount2OperationCompleted);
        }
        this.InvokeAsync("doMyAccount2", new object[] {
                    sessionhandle,
                    accounttype,
                    offset,
                    itemsarray}, this.doMyAccount2OperationCompleted, userState);
    }
    
    private void OndoMyAccount2OperationCompleted(object arg) {
        if ((this.doMyAccount2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyAccount2Completed(this, new doMyAccount2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#myaccountitemscount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("myaccount-items-count")]
    public int doMyAccountItemsCount([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("account-type")] string accounttype, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray) {
        object[] results = this.Invoke("doMyAccountItemsCount", new object[] {
                    sessionhandle,
                    accounttype,
                    itemsarray});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyAccountItemsCount(string sessionhandle, string accounttype, int[] itemsarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyAccountItemsCount", new object[] {
                    sessionhandle,
                    accounttype,
                    itemsarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoMyAccountItemsCount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doMyAccountItemsCountAsync(string sessionhandle, string accounttype, int[] itemsarray) {
        this.doMyAccountItemsCountAsync(sessionhandle, accounttype, itemsarray, null);
    }
    
    /// <remarks/>
    public void doMyAccountItemsCountAsync(string sessionhandle, string accounttype, int[] itemsarray, object userState) {
        if ((this.doMyAccountItemsCountOperationCompleted == null)) {
            this.doMyAccountItemsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyAccountItemsCountOperationCompleted);
        }
        this.InvokeAsync("doMyAccountItemsCount", new object[] {
                    sessionhandle,
                    accounttype,
                    itemsarray}, this.doMyAccountItemsCountOperationCompleted, userState);
    }
    
    private void OndoMyAccountItemsCountOperationCompleted(object arg) {
        if ((this.doMyAccountItemsCountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyAccountItemsCountCompleted(this, new doMyAccountItemsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#mybilling", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("my-billing")]
    public string doMyBilling([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doMyBilling", new object[] {
                    sessionhandle});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyBilling(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyBilling", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoMyBilling(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doMyBillingAsync(string sessionhandle) {
        this.doMyBillingAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doMyBillingAsync(string sessionhandle, object userState) {
        if ((this.doMyBillingOperationCompleted == null)) {
            this.doMyBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyBillingOperationCompleted);
        }
        this.InvokeAsync("doMyBilling", new object[] {
                    sessionhandle}, this.doMyBillingOperationCompleted, userState);
    }
    
    private void OndoMyBillingOperationCompleted(object arg) {
        if ((this.doMyBillingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyBillingCompleted(this, new doMyBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#mycontacts", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("mycontact-list")]
    public MyContactList[] doMyContact([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("auction-id-list")] int[] auctionidlist, string offset, int desc) {
        object[] results = this.Invoke("doMyContact", new object[] {
                    sessionhandle,
                    auctionidlist,
                    offset,
                    desc});
        return ((MyContactList[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyContact(string sessionhandle, int[] auctionidlist, string offset, int desc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyContact", new object[] {
                    sessionhandle,
                    auctionidlist,
                    offset,
                    desc}, callback, asyncState);
    }
    
    /// <remarks/>
    public MyContactList[] EnddoMyContact(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MyContactList[])(results[0]));
    }
    
    /// <remarks/>
    public void doMyContactAsync(string sessionhandle, int[] auctionidlist, string offset, int desc) {
        this.doMyContactAsync(sessionhandle, auctionidlist, offset, desc, null);
    }
    
    /// <remarks/>
    public void doMyContactAsync(string sessionhandle, int[] auctionidlist, string offset, int desc, object userState) {
        if ((this.doMyContactOperationCompleted == null)) {
            this.doMyContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyContactOperationCompleted);
        }
        this.InvokeAsync("doMyContact", new object[] {
                    sessionhandle,
                    auctionidlist,
                    offset,
                    desc}, this.doMyContactOperationCompleted, userState);
    }
    
    private void OndoMyContactOperationCompleted(object arg) {
        if ((this.doMyContactCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyContactCompleted(this, new doMyContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#myfeedback", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("myfeedback-list")]
    public string[][] doMyFeedback([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-type")] string feedbacktype, int offset, int desc, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray) {
        object[] results = this.Invoke("doMyFeedback", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray});
        return ((string[][])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyFeedback(string sessionhandle, string feedbacktype, int offset, int desc, int[] itemsarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyFeedback", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[][] EnddoMyFeedback(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[][])(results[0]));
    }
    
    /// <remarks/>
    public void doMyFeedbackAsync(string sessionhandle, string feedbacktype, int offset, int desc, int[] itemsarray) {
        this.doMyFeedbackAsync(sessionhandle, feedbacktype, offset, desc, itemsarray, null);
    }
    
    /// <remarks/>
    public void doMyFeedbackAsync(string sessionhandle, string feedbacktype, int offset, int desc, int[] itemsarray, object userState) {
        if ((this.doMyFeedbackOperationCompleted == null)) {
            this.doMyFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyFeedbackOperationCompleted);
        }
        this.InvokeAsync("doMyFeedback", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray}, this.doMyFeedbackOperationCompleted, userState);
    }
    
    private void OndoMyFeedbackOperationCompleted(object arg) {
        if ((this.doMyFeedbackCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyFeedbackCompleted(this, new doMyFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#myfeedback", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("myfeedback-list")]
    public MyFeedbackListStruct2[] doMyFeedback2([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-type")] string feedbacktype, string offset, int desc, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray) {
        object[] results = this.Invoke("doMyFeedback2", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray});
        return ((MyFeedbackListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyFeedback2(string sessionhandle, string feedbacktype, string offset, int desc, int[] itemsarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyFeedback2", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public MyFeedbackListStruct2[] EnddoMyFeedback2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MyFeedbackListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public void doMyFeedback2Async(string sessionhandle, string feedbacktype, string offset, int desc, int[] itemsarray) {
        this.doMyFeedback2Async(sessionhandle, feedbacktype, offset, desc, itemsarray, null);
    }
    
    /// <remarks/>
    public void doMyFeedback2Async(string sessionhandle, string feedbacktype, string offset, int desc, int[] itemsarray, object userState) {
        if ((this.doMyFeedback2OperationCompleted == null)) {
            this.doMyFeedback2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyFeedback2OperationCompleted);
        }
        this.InvokeAsync("doMyFeedback2", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray}, this.doMyFeedback2OperationCompleted, userState);
    }
    
    private void OndoMyFeedback2OperationCompleted(object arg) {
        if ((this.doMyFeedback2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyFeedback2Completed(this, new doMyFeedback2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#search", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("search-count")]
    public int doSearch([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("search-query")] SearchOptType searchquery, [System.Xml.Serialization.SoapElementAttribute("search-count-featured")] out int searchcountfeatured, [System.Xml.Serialization.SoapElementAttribute("search-array")] out SearchResponseType[] searcharray) {
        object[] results = this.Invoke("doSearch", new object[] {
                    sessionhandle,
                    searchquery});
        searchcountfeatured = ((int)(results[1]));
        searcharray = ((SearchResponseType[])(results[2]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSearch(string sessionhandle, SearchOptType searchquery, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSearch", new object[] {
                    sessionhandle,
                    searchquery}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoSearch(System.IAsyncResult asyncResult, out int searchcountfeatured, out SearchResponseType[] searcharray) {
        object[] results = this.EndInvoke(asyncResult);
        searchcountfeatured = ((int)(results[1]));
        searcharray = ((SearchResponseType[])(results[2]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doSearchAsync(string sessionhandle, SearchOptType searchquery) {
        this.doSearchAsync(sessionhandle, searchquery, null);
    }
    
    /// <remarks/>
    public void doSearchAsync(string sessionhandle, SearchOptType searchquery, object userState) {
        if ((this.doSearchOperationCompleted == null)) {
            this.doSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSearchOperationCompleted);
        }
        this.InvokeAsync("doSearch", new object[] {
                    sessionhandle,
                    searchquery}, this.doSearchOperationCompleted, userState);
    }
    
    private void OndoSearchOperationCompleted(object arg) {
        if ((this.doSearchCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSearchCompleted(this, new doSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getadminuserlicdate", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("get-date-value")]
    public float doGetAdminUserLicenceDate([System.Xml.Serialization.SoapElementAttribute("admin-session-handle")] string adminsessionhandle, [System.Xml.Serialization.SoapElementAttribute("user-lic-login")] string userliclogin) {
        object[] results = this.Invoke("doGetAdminUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin});
        return ((float)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetAdminUserLicenceDate(string adminsessionhandle, string userliclogin, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetAdminUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin}, callback, asyncState);
    }
    
    /// <remarks/>
    public float EnddoGetAdminUserLicenceDate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((float)(results[0]));
    }
    
    /// <remarks/>
    public void doGetAdminUserLicenceDateAsync(string adminsessionhandle, string userliclogin) {
        this.doGetAdminUserLicenceDateAsync(adminsessionhandle, userliclogin, null);
    }
    
    /// <remarks/>
    public void doGetAdminUserLicenceDateAsync(string adminsessionhandle, string userliclogin, object userState) {
        if ((this.doGetAdminUserLicenceDateOperationCompleted == null)) {
            this.doGetAdminUserLicenceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetAdminUserLicenceDateOperationCompleted);
        }
        this.InvokeAsync("doGetAdminUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin}, this.doGetAdminUserLicenceDateOperationCompleted, userState);
    }
    
    private void OndoGetAdminUserLicenceDateOperationCompleted(object arg) {
        if ((this.doGetAdminUserLicenceDateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetAdminUserLicenceDateCompleted(this, new doGetAdminUserLicenceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getpaymentstatus", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("code")]
    public int doGetPaymentStatus([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("payu-email")] string payuemail, [System.Xml.Serialization.SoapElementAttribute("payu-password")] string payupassword, [System.Xml.Serialization.SoapElementAttribute("allegro-auction-id")] int allegroauctionid, [System.Xml.Serialization.SoapElementAttribute("allegro-buyer-id")] int allegrobuyerid) {
        object[] results = this.Invoke("doGetPaymentStatus", new object[] {
                    sessionhandle,
                    payuemail,
                    payupassword,
                    allegroauctionid,
                    allegrobuyerid});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetPaymentStatus(string sessionhandle, string payuemail, string payupassword, int allegroauctionid, int allegrobuyerid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetPaymentStatus", new object[] {
                    sessionhandle,
                    payuemail,
                    payupassword,
                    allegroauctionid,
                    allegrobuyerid}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetPaymentStatus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetPaymentStatusAsync(string sessionhandle, string payuemail, string payupassword, int allegroauctionid, int allegrobuyerid) {
        this.doGetPaymentStatusAsync(sessionhandle, payuemail, payupassword, allegroauctionid, allegrobuyerid, null);
    }
    
    /// <remarks/>
    public void doGetPaymentStatusAsync(string sessionhandle, string payuemail, string payupassword, int allegroauctionid, int allegrobuyerid, object userState) {
        if ((this.doGetPaymentStatusOperationCompleted == null)) {
            this.doGetPaymentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPaymentStatusOperationCompleted);
        }
        this.InvokeAsync("doGetPaymentStatus", new object[] {
                    sessionhandle,
                    payuemail,
                    payupassword,
                    allegroauctionid,
                    allegrobuyerid}, this.doGetPaymentStatusOperationCompleted, userState);
    }
    
    private void OndoGetPaymentStatusOperationCompleted(object arg) {
        if ((this.doGetPaymentStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetPaymentStatusCompleted(this, new doGetPaymentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getuserlicdate", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("get-date-value")]
    public float doGetUserLicenceDate([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetUserLicenceDate", new object[] {
                    sessionhandle});
        return ((float)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetUserLicenceDate(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetUserLicenceDate", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public float EnddoGetUserLicenceDate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((float)(results[0]));
    }
    
    /// <remarks/>
    public void doGetUserLicenceDateAsync(string sessionhandle) {
        this.doGetUserLicenceDateAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetUserLicenceDateAsync(string sessionhandle, object userState) {
        if ((this.doGetUserLicenceDateOperationCompleted == null)) {
            this.doGetUserLicenceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserLicenceDateOperationCompleted);
        }
        this.InvokeAsync("doGetUserLicenceDate", new object[] {
                    sessionhandle}, this.doGetUserLicenceDateOperationCompleted, userState);
    }
    
    private void OndoGetUserLicenceDateOperationCompleted(object arg) {
        if ((this.doGetUserLicenceDateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetUserLicenceDateCompleted(this, new doGetUserLicenceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#billingitem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("entry-fees")]
    public ItemBilling[] doMyBillingItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] int itemid, string option, [System.Xml.Serialization.SoapElementAttribute("ending-fees")] out ItemBilling[] endingfees) {
        object[] results = this.Invoke("doMyBillingItem", new object[] {
                    sessionhandle,
                    itemid,
                    option});
        endingfees = ((ItemBilling[])(results[1]));
        return ((ItemBilling[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyBillingItem(string sessionhandle, int itemid, string option, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyBillingItem", new object[] {
                    sessionhandle,
                    itemid,
                    option}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemBilling[] EnddoMyBillingItem(System.IAsyncResult asyncResult, out ItemBilling[] endingfees) {
        object[] results = this.EndInvoke(asyncResult);
        endingfees = ((ItemBilling[])(results[1]));
        return ((ItemBilling[])(results[0]));
    }
    
    /// <remarks/>
    public void doMyBillingItemAsync(string sessionhandle, int itemid, string option) {
        this.doMyBillingItemAsync(sessionhandle, itemid, option, null);
    }
    
    /// <remarks/>
    public void doMyBillingItemAsync(string sessionhandle, int itemid, string option, object userState) {
        if ((this.doMyBillingItemOperationCompleted == null)) {
            this.doMyBillingItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyBillingItemOperationCompleted);
        }
        this.InvokeAsync("doMyBillingItem", new object[] {
                    sessionhandle,
                    itemid,
                    option}, this.doMyBillingItemOperationCompleted, userState);
    }
    
    private void OndoMyBillingItemOperationCompleted(object arg) {
        if ((this.doMyBillingItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyBillingItemCompleted(this, new doMyBillingItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#setuserlicdate", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("set-date-value")]
    public int doSetUserLicenceDate([System.Xml.Serialization.SoapElementAttribute("admin-session-handle")] string adminsessionhandle, [System.Xml.Serialization.SoapElementAttribute("user-lic-login")] string userliclogin, [System.Xml.Serialization.SoapElementAttribute("user-lic-country")] int userliccountry, [System.Xml.Serialization.SoapElementAttribute("user-lic-date")] float userlicdate) {
        object[] results = this.Invoke("doSetUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin,
                    userliccountry,
                    userlicdate});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSetUserLicenceDate(string adminsessionhandle, string userliclogin, int userliccountry, float userlicdate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSetUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin,
                    userliccountry,
                    userlicdate}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoSetUserLicenceDate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doSetUserLicenceDateAsync(string adminsessionhandle, string userliclogin, int userliccountry, float userlicdate) {
        this.doSetUserLicenceDateAsync(adminsessionhandle, userliclogin, userliccountry, userlicdate, null);
    }
    
    /// <remarks/>
    public void doSetUserLicenceDateAsync(string adminsessionhandle, string userliclogin, int userliccountry, float userlicdate, object userState) {
        if ((this.doSetUserLicenceDateOperationCompleted == null)) {
            this.doSetUserLicenceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSetUserLicenceDateOperationCompleted);
        }
        this.InvokeAsync("doSetUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin,
                    userliccountry,
                    userlicdate}, this.doSetUserLicenceDateOperationCompleted, userState);
    }
    
    private void OndoSetUserLicenceDateOperationCompleted(object arg) {
        if ((this.doSetUserLicenceDateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSetUserLicenceDateCompleted(this, new doSetUserLicenceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#biditem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("bid-price")]
    public string doBidItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("bid-it-id")] long biditid, [System.Xml.Serialization.SoapElementAttribute("bid-user-price")] float biduserprice, [System.Xml.Serialization.SoapElementAttribute("bid-quantity")] long bidquantity, [System.Xml.Serialization.SoapElementAttribute("bid-buy-now")] long bidbuynow) {
        object[] results = this.Invoke("doBidItem", new object[] {
                    sessionhandle,
                    biditid,
                    biduserprice,
                    bidquantity,
                    bidbuynow});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoBidItem(string sessionhandle, long biditid, float biduserprice, long bidquantity, long bidbuynow, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doBidItem", new object[] {
                    sessionhandle,
                    biditid,
                    biduserprice,
                    bidquantity,
                    bidbuynow}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoBidItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doBidItemAsync(string sessionhandle, long biditid, float biduserprice, long bidquantity, long bidbuynow) {
        this.doBidItemAsync(sessionhandle, biditid, biduserprice, bidquantity, bidbuynow, null);
    }
    
    /// <remarks/>
    public void doBidItemAsync(string sessionhandle, long biditid, float biduserprice, long bidquantity, long bidbuynow, object userState) {
        if ((this.doBidItemOperationCompleted == null)) {
            this.doBidItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoBidItemOperationCompleted);
        }
        this.InvokeAsync("doBidItem", new object[] {
                    sessionhandle,
                    biditid,
                    biduserprice,
                    bidquantity,
                    bidbuynow}, this.doBidItemOperationCompleted, userState);
    }
    
    private void OndoBidItemOperationCompleted(object arg) {
        if ((this.doBidItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doBidItemCompleted(this, new doBidItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#cancelbiditem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cancel-bid-value")]
    public int doCancelBidItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("cancel-item-id")] long cancelitemid, [System.Xml.Serialization.SoapElementAttribute("cancel-bids-array")] int[] cancelbidsarray, [System.Xml.Serialization.SoapElementAttribute("cancel-bids-reason")] string cancelbidsreason, [System.Xml.Serialization.SoapElementAttribute("cancel-add-to-black-list")] long canceladdtoblacklist) {
        object[] results = this.Invoke("doCancelBidItem", new object[] {
                    sessionhandle,
                    cancelitemid,
                    cancelbidsarray,
                    cancelbidsreason,
                    canceladdtoblacklist});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCancelBidItem(string sessionhandle, long cancelitemid, int[] cancelbidsarray, string cancelbidsreason, long canceladdtoblacklist, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCancelBidItem", new object[] {
                    sessionhandle,
                    cancelitemid,
                    cancelbidsarray,
                    cancelbidsreason,
                    canceladdtoblacklist}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoCancelBidItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doCancelBidItemAsync(string sessionhandle, long cancelitemid, int[] cancelbidsarray, string cancelbidsreason, long canceladdtoblacklist) {
        this.doCancelBidItemAsync(sessionhandle, cancelitemid, cancelbidsarray, cancelbidsreason, canceladdtoblacklist, null);
    }
    
    /// <remarks/>
    public void doCancelBidItemAsync(string sessionhandle, long cancelitemid, int[] cancelbidsarray, string cancelbidsreason, long canceladdtoblacklist, object userState) {
        if ((this.doCancelBidItemOperationCompleted == null)) {
            this.doCancelBidItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCancelBidItemOperationCompleted);
        }
        this.InvokeAsync("doCancelBidItem", new object[] {
                    sessionhandle,
                    cancelitemid,
                    cancelbidsarray,
                    cancelbidsreason,
                    canceladdtoblacklist}, this.doCancelBidItemOperationCompleted, userState);
    }
    
    private void OndoCancelBidItemOperationCompleted(object arg) {
        if ((this.doCancelBidItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCancelBidItemCompleted(this, new doCancelBidItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#changeprice", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-info")]
    public string doChangePriceItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] ref long itemid, [System.Xml.Serialization.SoapElementAttribute("new-starting-price")] float newstartingprice, [System.Xml.Serialization.SoapElementAttribute("new-reserve-price")] float newreserveprice, [System.Xml.Serialization.SoapElementAttribute("new-buy-now-price")] float newbuynowprice) {
        object[] results = this.Invoke("doChangePriceItem", new object[] {
                    sessionhandle,
                    itemid,
                    newstartingprice,
                    newreserveprice,
                    newbuynowprice});
        itemid = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoChangePriceItem(string sessionhandle, long itemid, float newstartingprice, float newreserveprice, float newbuynowprice, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doChangePriceItem", new object[] {
                    sessionhandle,
                    itemid,
                    newstartingprice,
                    newreserveprice,
                    newbuynowprice}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoChangePriceItem(System.IAsyncResult asyncResult, out long itemid) {
        object[] results = this.EndInvoke(asyncResult);
        itemid = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doChangePriceItemAsync(string sessionhandle, long itemid, float newstartingprice, float newreserveprice, float newbuynowprice) {
        this.doChangePriceItemAsync(sessionhandle, itemid, newstartingprice, newreserveprice, newbuynowprice, null);
    }
    
    /// <remarks/>
    public void doChangePriceItemAsync(string sessionhandle, long itemid, float newstartingprice, float newreserveprice, float newbuynowprice, object userState) {
        if ((this.doChangePriceItemOperationCompleted == null)) {
            this.doChangePriceItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoChangePriceItemOperationCompleted);
        }
        this.InvokeAsync("doChangePriceItem", new object[] {
                    sessionhandle,
                    itemid,
                    newstartingprice,
                    newreserveprice,
                    newbuynowprice}, this.doChangePriceItemOperationCompleted, userState);
    }
    
    private void OndoChangePriceItemOperationCompleted(object arg) {
        if ((this.doChangePriceItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doChangePriceItemCompleted(this, new doChangePriceItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#finishauction", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("finish-value")]
    public int doFinishAuction([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("finish-item-id")] long finishitemid, [System.Xml.Serialization.SoapElementAttribute("finish-cancel-all-bids")] int finishcancelallbids, [System.Xml.Serialization.SoapElementAttribute("finish-cancel-reason")] string finishcancelreason) {
        object[] results = this.Invoke("doFinishAuction", new object[] {
                    sessionhandle,
                    finishitemid,
                    finishcancelallbids,
                    finishcancelreason});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoFinishAuction(string sessionhandle, long finishitemid, int finishcancelallbids, string finishcancelreason, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doFinishAuction", new object[] {
                    sessionhandle,
                    finishitemid,
                    finishcancelallbids,
                    finishcancelreason}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoFinishAuction(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doFinishAuctionAsync(string sessionhandle, long finishitemid, int finishcancelallbids, string finishcancelreason) {
        this.doFinishAuctionAsync(sessionhandle, finishitemid, finishcancelallbids, finishcancelreason, null);
    }
    
    /// <remarks/>
    public void doFinishAuctionAsync(string sessionhandle, long finishitemid, int finishcancelallbids, string finishcancelreason, object userState) {
        if ((this.doFinishAuctionOperationCompleted == null)) {
            this.doFinishAuctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFinishAuctionOperationCompleted);
        }
        this.InvokeAsync("doFinishAuction", new object[] {
                    sessionhandle,
                    finishitemid,
                    finishcancelallbids,
                    finishcancelreason}, this.doFinishAuctionOperationCompleted, userState);
    }
    
    private void OndoFinishAuctionOperationCompleted(object arg) {
        if ((this.doFinishAuctionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doFinishAuctionCompleted(this, new doFinishAuctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getitemtrans", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-info")]
    public ItemInfo doGetItemTransaction([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("item-options")] int itemoptions, [System.Xml.Serialization.SoapElementAttribute("item-cat-path")] out ItemCatList[] itemcatpath, [System.Xml.Serialization.SoapElementAttribute("item-img-list")] out ItemImageList[] itemimglist, [System.Xml.Serialization.SoapElementAttribute("bid-won-contact-info")] out ItemTransStruct[] bidwoncontactinfo, [System.Xml.Serialization.SoapElementAttribute("bid-lost-info")] out BidListStruct2[] bidlostinfo) {
        object[] results = this.Invoke("doGetItemTransaction", new object[] {
                    sessionhandle,
                    itemid,
                    itemoptions});
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        bidwoncontactinfo = ((ItemTransStruct[])(results[3]));
        bidlostinfo = ((BidListStruct2[])(results[4]));
        return ((ItemInfo)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetItemTransaction(string sessionhandle, long itemid, int itemoptions, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetItemTransaction", new object[] {
                    sessionhandle,
                    itemid,
                    itemoptions}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemInfo EnddoGetItemTransaction(System.IAsyncResult asyncResult, out ItemCatList[] itemcatpath, out ItemImageList[] itemimglist, out ItemTransStruct[] bidwoncontactinfo, out BidListStruct2[] bidlostinfo) {
        object[] results = this.EndInvoke(asyncResult);
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        bidwoncontactinfo = ((ItemTransStruct[])(results[3]));
        bidlostinfo = ((BidListStruct2[])(results[4]));
        return ((ItemInfo)(results[0]));
    }
    
    /// <remarks/>
    public void doGetItemTransactionAsync(string sessionhandle, long itemid, int itemoptions) {
        this.doGetItemTransactionAsync(sessionhandle, itemid, itemoptions, null);
    }
    
    /// <remarks/>
    public void doGetItemTransactionAsync(string sessionhandle, long itemid, int itemoptions, object userState) {
        if ((this.doGetItemTransactionOperationCompleted == null)) {
            this.doGetItemTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetItemTransactionOperationCompleted);
        }
        this.InvokeAsync("doGetItemTransaction", new object[] {
                    sessionhandle,
                    itemid,
                    itemoptions}, this.doGetItemTransactionOperationCompleted, userState);
    }
    
    private void OndoGetItemTransactionOperationCompleted(object arg) {
        if ((this.doGetItemTransactionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetItemTransactionCompleted(this, new doGetItemTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#requestcancelbid", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("request-value")]
    public int doRequestCancelBid([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("request-item-id")] long requestitemid, [System.Xml.Serialization.SoapElementAttribute("request-cancel-reason")] string requestcancelreason) {
        object[] results = this.Invoke("doRequestCancelBid", new object[] {
                    sessionhandle,
                    requestitemid,
                    requestcancelreason});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoRequestCancelBid(string sessionhandle, long requestitemid, string requestcancelreason, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doRequestCancelBid", new object[] {
                    sessionhandle,
                    requestitemid,
                    requestcancelreason}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoRequestCancelBid(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doRequestCancelBidAsync(string sessionhandle, long requestitemid, string requestcancelreason) {
        this.doRequestCancelBidAsync(sessionhandle, requestitemid, requestcancelreason, null);
    }
    
    /// <remarks/>
    public void doRequestCancelBidAsync(string sessionhandle, long requestitemid, string requestcancelreason, object userState) {
        if ((this.doRequestCancelBidOperationCompleted == null)) {
            this.doRequestCancelBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRequestCancelBidOperationCompleted);
        }
        this.InvokeAsync("doRequestCancelBid", new object[] {
                    sessionhandle,
                    requestitemid,
                    requestcancelreason}, this.doRequestCancelBidOperationCompleted, userState);
    }
    
    private void OndoRequestCancelBidOperationCompleted(object arg) {
        if ((this.doRequestCancelBidCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doRequestCancelBidCompleted(this, new doRequestCancelBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#catsdatacount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cats-count")]
    public int doGetCatsDataCount([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetCatsDataCount", new object[] {
                    countryid,
                    localversion,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetCatsDataCount(int countryid, long localversion, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetCatsDataCount", new object[] {
                    countryid,
                    localversion,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetCatsDataCount(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetCatsDataCountAsync(int countryid, long localversion, string webapikey) {
        this.doGetCatsDataCountAsync(countryid, localversion, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetCatsDataCountAsync(int countryid, long localversion, string webapikey, object userState) {
        if ((this.doGetCatsDataCountOperationCompleted == null)) {
            this.doGetCatsDataCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCatsDataCountOperationCompleted);
        }
        this.InvokeAsync("doGetCatsDataCount", new object[] {
                    countryid,
                    localversion,
                    webapikey}, this.doGetCatsDataCountOperationCompleted, userState);
    }
    
    private void OndoGetCatsDataCountOperationCompleted(object arg) {
        if ((this.doGetCatsDataCountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetCatsDataCountCompleted(this, new doGetCatsDataCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#myfeedbacklimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("myfeedback-list")]
    public MyFeedbackListStruct2[] doMyFeedback2Limit([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-type")] string feedbacktype, string offset, int desc, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement) {
        object[] results = this.Invoke("doMyFeedback2Limit", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray,
                    packageelement});
        return ((MyFeedbackListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyFeedback2Limit(string sessionhandle, string feedbacktype, string offset, int desc, int[] itemsarray, int packageelement, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyFeedback2Limit", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray,
                    packageelement}, callback, asyncState);
    }
    
    /// <remarks/>
    public MyFeedbackListStruct2[] EnddoMyFeedback2Limit(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MyFeedbackListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public void doMyFeedback2LimitAsync(string sessionhandle, string feedbacktype, string offset, int desc, int[] itemsarray, int packageelement) {
        this.doMyFeedback2LimitAsync(sessionhandle, feedbacktype, offset, desc, itemsarray, packageelement, null);
    }
    
    /// <remarks/>
    public void doMyFeedback2LimitAsync(string sessionhandle, string feedbacktype, string offset, int desc, int[] itemsarray, int packageelement, object userState) {
        if ((this.doMyFeedback2LimitOperationCompleted == null)) {
            this.doMyFeedback2LimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyFeedback2LimitOperationCompleted);
        }
        this.InvokeAsync("doMyFeedback2Limit", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray,
                    packageelement}, this.doMyFeedback2LimitOperationCompleted, userState);
    }
    
    private void OndoMyFeedback2LimitOperationCompleted(object arg) {
        if ((this.doMyFeedback2LimitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyFeedback2LimitCompleted(this, new doMyFeedback2LimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getcountry", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("country-array")]
    public CountryInfoType[] doGetCountries([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetCountries", new object[] {
                    countrycode,
                    webapikey});
        return ((CountryInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetCountries(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetCountries", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public CountryInfoType[] EnddoGetCountries(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CountryInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetCountriesAsync(int countrycode, string webapikey) {
        this.doGetCountriesAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetCountriesAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetCountriesOperationCompleted == null)) {
            this.doGetCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCountriesOperationCompleted);
        }
        this.InvokeAsync("doGetCountries", new object[] {
                    countrycode,
                    webapikey}, this.doGetCountriesOperationCompleted, userState);
    }
    
    private void OndoGetCountriesOperationCompleted(object arg) {
        if ((this.doGetCountriesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetCountriesCompleted(this, new doGetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#gettemplates", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("templates-array")]
    public TemplateInfoType[] doGetServiceTemplates([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetServiceTemplates", new object[] {
                    countrycode,
                    webapikey});
        return ((TemplateInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetServiceTemplates(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetServiceTemplates", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public TemplateInfoType[] EnddoGetServiceTemplates(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TemplateInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetServiceTemplatesAsync(int countrycode, string webapikey) {
        this.doGetServiceTemplatesAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetServiceTemplatesAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetServiceTemplatesOperationCompleted == null)) {
            this.doGetServiceTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetServiceTemplatesOperationCompleted);
        }
        this.InvokeAsync("doGetServiceTemplates", new object[] {
                    countrycode,
                    webapikey}, this.doGetServiceTemplatesOperationCompleted, userState);
    }
    
    private void OndoGetServiceTemplatesOperationCompleted(object arg) {
        if ((this.doGetServiceTemplatesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetServiceTemplatesCompleted(this, new doGetServiceTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellformattribs", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
    public SellFormType[] doGetSellFormAttribs([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("cat-id")] int catid, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetSellFormAttribs", new object[] {
                    countryid,
                    webapikey,
                    localversion,
                    catid});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellFormAttribs(int countryid, string webapikey, long localversion, int catid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellFormAttribs", new object[] {
                    countryid,
                    webapikey,
                    localversion,
                    catid}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellFormType[] EnddoGetSellFormAttribs(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellFormAttribsAsync(int countryid, string webapikey, long localversion, int catid) {
        this.doGetSellFormAttribsAsync(countryid, webapikey, localversion, catid, null);
    }
    
    /// <remarks/>
    public void doGetSellFormAttribsAsync(int countryid, string webapikey, long localversion, int catid, object userState) {
        if ((this.doGetSellFormAttribsOperationCompleted == null)) {
            this.doGetSellFormAttribsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormAttribsOperationCompleted);
        }
        this.InvokeAsync("doGetSellFormAttribs", new object[] {
                    countryid,
                    webapikey,
                    localversion,
                    catid}, this.doGetSellFormAttribsOperationCompleted, userState);
    }
    
    private void OndoGetSellFormAttribsOperationCompleted(object arg) {
        if ((this.doGetSellFormAttribsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellFormAttribsCompleted(this, new doGetSellFormAttribsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#feedbackmany", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("fe-results")]
    public FeedbackResultStruct[] doFeedbackMany([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedbacks-list")] FeedbackManyStruct[] feedbackslist) {
        object[] results = this.Invoke("doFeedbackMany", new object[] {
                    sessionhandle,
                    feedbackslist});
        return ((FeedbackResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoFeedbackMany(string sessionhandle, FeedbackManyStruct[] feedbackslist, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doFeedbackMany", new object[] {
                    sessionhandle,
                    feedbackslist}, callback, asyncState);
    }
    
    /// <remarks/>
    public FeedbackResultStruct[] EnddoFeedbackMany(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((FeedbackResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doFeedbackManyAsync(string sessionhandle, FeedbackManyStruct[] feedbackslist) {
        this.doFeedbackManyAsync(sessionhandle, feedbackslist, null);
    }
    
    /// <remarks/>
    public void doFeedbackManyAsync(string sessionhandle, FeedbackManyStruct[] feedbackslist, object userState) {
        if ((this.doFeedbackManyOperationCompleted == null)) {
            this.doFeedbackManyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFeedbackManyOperationCompleted);
        }
        this.InvokeAsync("doFeedbackMany", new object[] {
                    sessionhandle,
                    feedbackslist}, this.doFeedbackManyOperationCompleted, userState);
    }
    
    private void OndoFeedbackManyOperationCompleted(object arg) {
        if ((this.doFeedbackManyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doFeedbackManyCompleted(this, new doFeedbackManyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#showiteminfoext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-list-info-ext")]
    public ItemInfoExt doShowItemInfoExt([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("get-desc")] int getdesc, [System.Xml.Serialization.SoapElementAttribute("get-image-url")] int getimageurl, [System.Xml.Serialization.SoapElementAttribute("item-cat-path")] out ItemCatList[] itemcatpath, [System.Xml.Serialization.SoapElementAttribute("item-img-list")] out ItemImageList[] itemimglist) {
        object[] results = this.Invoke("doShowItemInfoExt", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl});
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        return ((ItemInfoExt)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoShowItemInfoExt(string sessionhandle, long itemid, int getdesc, int getimageurl, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doShowItemInfoExt", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemInfoExt EnddoShowItemInfoExt(System.IAsyncResult asyncResult, out ItemCatList[] itemcatpath, out ItemImageList[] itemimglist) {
        object[] results = this.EndInvoke(asyncResult);
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        return ((ItemInfoExt)(results[0]));
    }
    
    /// <remarks/>
    public void doShowItemInfoExtAsync(string sessionhandle, long itemid, int getdesc, int getimageurl) {
        this.doShowItemInfoExtAsync(sessionhandle, itemid, getdesc, getimageurl, null);
    }
    
    /// <remarks/>
    public void doShowItemInfoExtAsync(string sessionhandle, long itemid, int getdesc, int getimageurl, object userState) {
        if ((this.doShowItemInfoExtOperationCompleted == null)) {
            this.doShowItemInfoExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowItemInfoExtOperationCompleted);
        }
        this.InvokeAsync("doShowItemInfoExt", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl}, this.doShowItemInfoExtOperationCompleted, userState);
    }
    
    private void OndoShowItemInfoExtOperationCompleted(object arg) {
        if ((this.doShowItemInfoExtCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doShowItemInfoExtCompleted(this, new doShowItemInfoExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#waitfeedcount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("feedback-count")]
    public int doGetWaitingFeedbacksCount([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetWaitingFeedbacksCount", new object[] {
                    sessionhandle});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetWaitingFeedbacksCount(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetWaitingFeedbacksCount", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetWaitingFeedbacksCount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetWaitingFeedbacksCountAsync(string sessionhandle) {
        this.doGetWaitingFeedbacksCountAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetWaitingFeedbacksCountAsync(string sessionhandle, object userState) {
        if ((this.doGetWaitingFeedbacksCountOperationCompleted == null)) {
            this.doGetWaitingFeedbacksCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetWaitingFeedbacksCountOperationCompleted);
        }
        this.InvokeAsync("doGetWaitingFeedbacksCount", new object[] {
                    sessionhandle}, this.doGetWaitingFeedbacksCountOperationCompleted, userState);
    }
    
    private void OndoGetWaitingFeedbacksCountOperationCompleted(object arg) {
        if ((this.doGetWaitingFeedbacksCountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetWaitingFeedbacksCountCompleted(this, new doGetWaitingFeedbacksCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#waitfeed", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("fe-wait-list")]
    public WaitFeedbackStruct[] doGetWaitingFeedbacks([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, int offset) {
        object[] results = this.Invoke("doGetWaitingFeedbacks", new object[] {
                    sessionhandle,
                    offset});
        return ((WaitFeedbackStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetWaitingFeedbacks(string sessionhandle, int offset, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetWaitingFeedbacks", new object[] {
                    sessionhandle,
                    offset}, callback, asyncState);
    }
    
    /// <remarks/>
    public WaitFeedbackStruct[] EnddoGetWaitingFeedbacks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((WaitFeedbackStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetWaitingFeedbacksAsync(string sessionhandle, int offset) {
        this.doGetWaitingFeedbacksAsync(sessionhandle, offset, null);
    }
    
    /// <remarks/>
    public void doGetWaitingFeedbacksAsync(string sessionhandle, int offset, object userState) {
        if ((this.doGetWaitingFeedbacksOperationCompleted == null)) {
            this.doGetWaitingFeedbacksOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetWaitingFeedbacksOperationCompleted);
        }
        this.InvokeAsync("doGetWaitingFeedbacks", new object[] {
                    sessionhandle,
                    offset}, this.doGetWaitingFeedbacksOperationCompleted, userState);
    }
    
    private void OndoGetWaitingFeedbacksOperationCompleted(object arg) {
        if ((this.doGetWaitingFeedbacksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetWaitingFeedbacksCompleted(this, new doGetWaitingFeedbacksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getblacklist", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("black-list-users")]
    public BlackListStruct[] doGetBlackListUsers([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetBlackListUsers", new object[] {
                    sessionhandle});
        return ((BlackListStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetBlackListUsers(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetBlackListUsers", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public BlackListStruct[] EnddoGetBlackListUsers(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BlackListStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetBlackListUsersAsync(string sessionhandle) {
        this.doGetBlackListUsersAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetBlackListUsersAsync(string sessionhandle, object userState) {
        if ((this.doGetBlackListUsersOperationCompleted == null)) {
            this.doGetBlackListUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetBlackListUsersOperationCompleted);
        }
        this.InvokeAsync("doGetBlackListUsers", new object[] {
                    sessionhandle}, this.doGetBlackListUsersOperationCompleted, userState);
    }
    
    private void OndoGetBlackListUsersOperationCompleted(object arg) {
        if ((this.doGetBlackListUsersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetBlackListUsersCompleted(this, new doGetBlackListUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#removefromblacklist", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("black-list-result")]
    public BlackListResStruct[] doRemoveFromBlackList([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("users-id-array")] long[] usersidarray) {
        object[] results = this.Invoke("doRemoveFromBlackList", new object[] {
                    sessionhandle,
                    usersidarray});
        return ((BlackListResStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoRemoveFromBlackList(string sessionhandle, long[] usersidarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doRemoveFromBlackList", new object[] {
                    sessionhandle,
                    usersidarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public BlackListResStruct[] EnddoRemoveFromBlackList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BlackListResStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doRemoveFromBlackListAsync(string sessionhandle, long[] usersidarray) {
        this.doRemoveFromBlackListAsync(sessionhandle, usersidarray, null);
    }
    
    /// <remarks/>
    public void doRemoveFromBlackListAsync(string sessionhandle, long[] usersidarray, object userState) {
        if ((this.doRemoveFromBlackListOperationCompleted == null)) {
            this.doRemoveFromBlackListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRemoveFromBlackListOperationCompleted);
        }
        this.InvokeAsync("doRemoveFromBlackList", new object[] {
                    sessionhandle,
                    usersidarray}, this.doRemoveFromBlackListOperationCompleted, userState);
    }
    
    private void OndoRemoveFromBlackListOperationCompleted(object arg) {
        if ((this.doRemoveFromBlackListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doRemoveFromBlackListCompleted(this, new doRemoveFromBlackListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getannouncementcats", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("service-info-cats-list")]
    public ServiceInfoCatStruct[] doGetServiceInfoCategories([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetServiceInfoCategories", new object[] {
                    countrycode,
                    webapikey});
        return ((ServiceInfoCatStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetServiceInfoCategories(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetServiceInfoCategories", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public ServiceInfoCatStruct[] EnddoGetServiceInfoCategories(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ServiceInfoCatStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetServiceInfoCategoriesAsync(int countrycode, string webapikey) {
        this.doGetServiceInfoCategoriesAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetServiceInfoCategoriesAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetServiceInfoCategoriesOperationCompleted == null)) {
            this.doGetServiceInfoCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetServiceInfoCategoriesOperationCompleted);
        }
        this.InvokeAsync("doGetServiceInfoCategories", new object[] {
                    countrycode,
                    webapikey}, this.doGetServiceInfoCategoriesOperationCompleted, userState);
    }
    
    private void OndoGetServiceInfoCategoriesOperationCompleted(object arg) {
        if ((this.doGetServiceInfoCategoriesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetServiceInfoCategoriesCompleted(this, new doGetServiceInfoCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getannouncementitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("service-info-items-list")]
    public ServiceInfoStruct[] doGetServiceInfo([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("an-cat-id")] int ancatid, [System.Xml.Serialization.SoapElementAttribute("an-it-date")] long anitdate, [System.Xml.Serialization.SoapElementAttribute("an-it-id")] int anitid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetServiceInfo", new object[] {
                    countrycode,
                    ancatid,
                    anitdate,
                    anitid,
                    webapikey});
        return ((ServiceInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetServiceInfo(int countrycode, int ancatid, long anitdate, int anitid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetServiceInfo", new object[] {
                    countrycode,
                    ancatid,
                    anitdate,
                    anitid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public ServiceInfoStruct[] EnddoGetServiceInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ServiceInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetServiceInfoAsync(int countrycode, int ancatid, long anitdate, int anitid, string webapikey) {
        this.doGetServiceInfoAsync(countrycode, ancatid, anitdate, anitid, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetServiceInfoAsync(int countrycode, int ancatid, long anitdate, int anitid, string webapikey, object userState) {
        if ((this.doGetServiceInfoOperationCompleted == null)) {
            this.doGetServiceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetServiceInfoOperationCompleted);
        }
        this.InvokeAsync("doGetServiceInfo", new object[] {
                    countrycode,
                    ancatid,
                    anitdate,
                    anitid,
                    webapikey}, this.doGetServiceInfoOperationCompleted, userState);
    }
    
    private void OndoGetServiceInfoOperationCompleted(object arg) {
        if ((this.doGetServiceInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetServiceInfoCompleted(this, new doGetServiceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getstatesinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("states-info-array")]
    public StateInfoStruct[] doGetStatesInfo([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetStatesInfo", new object[] {
                    countrycode,
                    webapikey});
        return ((StateInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetStatesInfo(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetStatesInfo", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public StateInfoStruct[] EnddoGetStatesInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((StateInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetStatesInfoAsync(int countrycode, string webapikey) {
        this.doGetStatesInfoAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetStatesInfoAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetStatesInfoOperationCompleted == null)) {
            this.doGetStatesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetStatesInfoOperationCompleted);
        }
        this.InvokeAsync("doGetStatesInfo", new object[] {
                    countrycode,
                    webapikey}, this.doGetStatesInfoOperationCompleted, userState);
    }
    
    private void OndoGetStatesInfoOperationCompleted(object arg) {
        if ((this.doGetStatesInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetStatesInfoCompleted(this, new doGetStatesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#shopcatsdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("shop-cats-list")]
    public CatInfoType[] doGetShopCatsData([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetShopCatsData", new object[] {
                    sessionhandle});
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetShopCatsData(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetShopCatsData", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public CatInfoType[] EnddoGetShopCatsData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetShopCatsDataAsync(string sessionhandle) {
        this.doGetShopCatsDataAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetShopCatsDataAsync(string sessionhandle, object userState) {
        if ((this.doGetShopCatsDataOperationCompleted == null)) {
            this.doGetShopCatsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetShopCatsDataOperationCompleted);
        }
        this.InvokeAsync("doGetShopCatsData", new object[] {
                    sessionhandle}, this.doGetShopCatsDataOperationCompleted, userState);
    }
    
    private void OndoGetShopCatsDataOperationCompleted(object arg) {
        if ((this.doGetShopCatsDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetShopCatsDataCompleted(this, new doGetShopCatsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#checkexternalkey", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public int doCheckExternalKey([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("hash-key")] string hashkey) {
        object[] results = this.Invoke("doCheckExternalKey", new object[] {
                    webapikey,
                    userid,
                    itemid,
                    hashkey});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCheckExternalKey(string webapikey, long userid, long itemid, string hashkey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCheckExternalKey", new object[] {
                    webapikey,
                    userid,
                    itemid,
                    hashkey}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoCheckExternalKey(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doCheckExternalKeyAsync(string webapikey, long userid, long itemid, string hashkey) {
        this.doCheckExternalKeyAsync(webapikey, userid, itemid, hashkey, null);
    }
    
    /// <remarks/>
    public void doCheckExternalKeyAsync(string webapikey, long userid, long itemid, string hashkey, object userState) {
        if ((this.doCheckExternalKeyOperationCompleted == null)) {
            this.doCheckExternalKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckExternalKeyOperationCompleted);
        }
        this.InvokeAsync("doCheckExternalKey", new object[] {
                    webapikey,
                    userid,
                    itemid,
                    hashkey}, this.doCheckExternalKeyOperationCompleted, userState);
    }
    
    private void OndoCheckExternalKeyOperationCompleted(object arg) {
        if ((this.doCheckExternalKeyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCheckExternalKeyCompleted(this, new doCheckExternalKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellshopagain", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("items-sell-again")]
    public StructSellAgain[] doSellSomeAgainInShop([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("sell-items-array")] long[] sellitemsarray, [System.Xml.Serialization.SoapElementAttribute("sell-starting-time")] long sellstartingtime, [System.Xml.Serialization.SoapElementAttribute("sell-shop-duration")] int sellshopduration, [System.Xml.Serialization.SoapElementAttribute("sell-shop-options")] int sellshopoptions, [System.Xml.Serialization.SoapElementAttribute("sell-prolong-options")] int sellprolongoptions, [System.Xml.Serialization.SoapElementAttribute("sell-shop-category")] long sellshopcategory, [System.Xml.Serialization.SoapElementAttribute("items-sell-failed")] out StructSellFailed[] itemssellfailed, [System.Xml.Serialization.SoapElementAttribute("items-sell-not-found")] out long[] itemssellnotfound) {
        object[] results = this.Invoke("doSellSomeAgainInShop", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellshopduration,
                    sellshopoptions,
                    sellprolongoptions,
                    sellshopcategory});
        itemssellfailed = ((StructSellFailed[])(results[1]));
        itemssellnotfound = ((long[])(results[2]));
        return ((StructSellAgain[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSellSomeAgainInShop(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellshopduration, int sellshopoptions, int sellprolongoptions, long sellshopcategory, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSellSomeAgainInShop", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellshopduration,
                    sellshopoptions,
                    sellprolongoptions,
                    sellshopcategory}, callback, asyncState);
    }
    
    /// <remarks/>
    public StructSellAgain[] EnddoSellSomeAgainInShop(System.IAsyncResult asyncResult, out StructSellFailed[] itemssellfailed, out long[] itemssellnotfound) {
        object[] results = this.EndInvoke(asyncResult);
        itemssellfailed = ((StructSellFailed[])(results[1]));
        itemssellnotfound = ((long[])(results[2]));
        return ((StructSellAgain[])(results[0]));
    }
    
    /// <remarks/>
    public void doSellSomeAgainInShopAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellshopduration, int sellshopoptions, int sellprolongoptions, long sellshopcategory) {
        this.doSellSomeAgainInShopAsync(sessionhandle, sellitemsarray, sellstartingtime, sellshopduration, sellshopoptions, sellprolongoptions, sellshopcategory, null);
    }
    
    /// <remarks/>
    public void doSellSomeAgainInShopAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellshopduration, int sellshopoptions, int sellprolongoptions, long sellshopcategory, object userState) {
        if ((this.doSellSomeAgainInShopOperationCompleted == null)) {
            this.doSellSomeAgainInShopOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSellSomeAgainInShopOperationCompleted);
        }
        this.InvokeAsync("doSellSomeAgainInShop", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellshopduration,
                    sellshopoptions,
                    sellprolongoptions,
                    sellshopcategory}, this.doSellSomeAgainInShopOperationCompleted, userState);
    }
    
    private void OndoSellSomeAgainInShopOperationCompleted(object arg) {
        if ((this.doSellSomeAgainInShopCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSellSomeAgainInShopCompleted(this, new doSellSomeAgainInShopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getsupersellerstatus", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-ss-status")]
    public int doGetSuperSellerStatus([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid) {
        object[] results = this.Invoke("doGetSuperSellerStatus", new object[] {
                    webapikey,
                    userid});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSuperSellerStatus(string webapikey, long userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSuperSellerStatus", new object[] {
                    webapikey,
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetSuperSellerStatus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetSuperSellerStatusAsync(string webapikey, long userid) {
        this.doGetSuperSellerStatusAsync(webapikey, userid, null);
    }
    
    /// <remarks/>
    public void doGetSuperSellerStatusAsync(string webapikey, long userid, object userState) {
        if ((this.doGetSuperSellerStatusOperationCompleted == null)) {
            this.doGetSuperSellerStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSuperSellerStatusOperationCompleted);
        }
        this.InvokeAsync("doGetSuperSellerStatus", new object[] {
                    webapikey,
                    userid}, this.doGetSuperSellerStatusOperationCompleted, userState);
    }
    
    private void OndoGetSuperSellerStatusOperationCompleted(object arg) {
        if ((this.doGetSuperSellerStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSuperSellerStatusCompleted(this, new doGetSuperSellerStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getmydata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-data")]
    public UserDataStruct doGetMyData([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("invoice-data")] out InvoiceDataStruct invoicedata) {
        object[] results = this.Invoke("doGetMyData", new object[] {
                    sessionhandle});
        invoicedata = ((InvoiceDataStruct)(results[1]));
        return ((UserDataStruct)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetMyData(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetMyData", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserDataStruct EnddoGetMyData(System.IAsyncResult asyncResult, out InvoiceDataStruct invoicedata) {
        object[] results = this.EndInvoke(asyncResult);
        invoicedata = ((InvoiceDataStruct)(results[1]));
        return ((UserDataStruct)(results[0]));
    }
    
    /// <remarks/>
    public void doGetMyDataAsync(string sessionhandle) {
        this.doGetMyDataAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetMyDataAsync(string sessionhandle, object userState) {
        if ((this.doGetMyDataOperationCompleted == null)) {
            this.doGetMyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyDataOperationCompleted);
        }
        this.InvokeAsync("doGetMyData", new object[] {
                    sessionhandle}, this.doGetMyDataOperationCompleted, userState);
    }
    
    private void OndoGetMyDataOperationCompleted(object arg) {
        if ((this.doGetMyDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetMyDataCompleted(this, new doGetMyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#internalistorechange", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public int doInternalIStoreChange([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid, [System.Xml.Serialization.SoapElementAttribute("istore-id")] long istoreid, [System.Xml.Serialization.SoapElementAttribute("action-type")] string actiontype, [System.Xml.Serialization.SoapElementAttribute("action-date")] long actiondate, [System.Xml.Serialization.SoapElementAttribute("valid-date")] long validdate) {
        object[] results = this.Invoke("doInternalIStoreChange", new object[] {
                    webapikey,
                    userid,
                    istoreid,
                    actiontype,
                    actiondate,
                    validdate});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoInternalIStoreChange(string webapikey, long userid, long istoreid, string actiontype, long actiondate, long validdate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doInternalIStoreChange", new object[] {
                    webapikey,
                    userid,
                    istoreid,
                    actiontype,
                    actiondate,
                    validdate}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoInternalIStoreChange(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doInternalIStoreChangeAsync(string webapikey, long userid, long istoreid, string actiontype, long actiondate, long validdate) {
        this.doInternalIStoreChangeAsync(webapikey, userid, istoreid, actiontype, actiondate, validdate, null);
    }
    
    /// <remarks/>
    public void doInternalIStoreChangeAsync(string webapikey, long userid, long istoreid, string actiontype, long actiondate, long validdate, object userState) {
        if ((this.doInternalIStoreChangeOperationCompleted == null)) {
            this.doInternalIStoreChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoInternalIStoreChangeOperationCompleted);
        }
        this.InvokeAsync("doInternalIStoreChange", new object[] {
                    webapikey,
                    userid,
                    istoreid,
                    actiontype,
                    actiondate,
                    validdate}, this.doInternalIStoreChangeOperationCompleted, userState);
    }
    
    private void OndoInternalIStoreChangeOperationCompleted(object arg) {
        if ((this.doInternalIStoreChangeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doInternalIStoreChangeCompleted(this, new doInternalIStoreChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dointernalchecklogin", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public int doInternalCheckLogin([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-login")] string userlogin, [System.Xml.Serialization.SoapElementAttribute("user-first-name")] string userfirstname, [System.Xml.Serialization.SoapElementAttribute("user-last-name")] string userlastname, [System.Xml.Serialization.SoapElementAttribute("user-id")] ref long userid) {
        object[] results = this.Invoke("doInternalCheckLogin", new object[] {
                    webapikey,
                    userlogin,
                    userfirstname,
                    userlastname,
                    userid});
        userid = ((long)(results[1]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoInternalCheckLogin(string webapikey, string userlogin, string userfirstname, string userlastname, long userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doInternalCheckLogin", new object[] {
                    webapikey,
                    userlogin,
                    userfirstname,
                    userlastname,
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoInternalCheckLogin(System.IAsyncResult asyncResult, out long userid) {
        object[] results = this.EndInvoke(asyncResult);
        userid = ((long)(results[1]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doInternalCheckLoginAsync(string webapikey, string userlogin, string userfirstname, string userlastname, long userid) {
        this.doInternalCheckLoginAsync(webapikey, userlogin, userfirstname, userlastname, userid, null);
    }
    
    /// <remarks/>
    public void doInternalCheckLoginAsync(string webapikey, string userlogin, string userfirstname, string userlastname, long userid, object userState) {
        if ((this.doInternalCheckLoginOperationCompleted == null)) {
            this.doInternalCheckLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoInternalCheckLoginOperationCompleted);
        }
        this.InvokeAsync("doInternalCheckLogin", new object[] {
                    webapikey,
                    userlogin,
                    userfirstname,
                    userlastname,
                    userid}, this.doInternalCheckLoginOperationCompleted, userState);
    }
    
    private void OndoInternalCheckLoginOperationCompleted(object arg) {
        if ((this.doInternalCheckLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doInternalCheckLoginCompleted(this, new doInternalCheckLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dointernalgetstatusfordebitcard", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public int doInternalGetStatusForDebitCard([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid) {
        object[] results = this.Invoke("doInternalGetStatusForDebitCard", new object[] {
                    webapikey,
                    userid});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoInternalGetStatusForDebitCard(string webapikey, long userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doInternalGetStatusForDebitCard", new object[] {
                    webapikey,
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoInternalGetStatusForDebitCard(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doInternalGetStatusForDebitCardAsync(string webapikey, long userid) {
        this.doInternalGetStatusForDebitCardAsync(webapikey, userid, null);
    }
    
    /// <remarks/>
    public void doInternalGetStatusForDebitCardAsync(string webapikey, long userid, object userState) {
        if ((this.doInternalGetStatusForDebitCardOperationCompleted == null)) {
            this.doInternalGetStatusForDebitCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoInternalGetStatusForDebitCardOperationCompleted);
        }
        this.InvokeAsync("doInternalGetStatusForDebitCard", new object[] {
                    webapikey,
                    userid}, this.doInternalGetStatusForDebitCardOperationCompleted, userState);
    }
    
    private void OndoInternalGetStatusForDebitCardOperationCompleted(object arg) {
        if ((this.doInternalGetStatusForDebitCardCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doInternalGetStatusForDebitCardCompleted(this, new doInternalGetStatusForDebitCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dointernalgetstatusforcreditcard", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public int doInternalGetStatusForCreditCard([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid) {
        object[] results = this.Invoke("doInternalGetStatusForCreditCard", new object[] {
                    webapikey,
                    userid});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoInternalGetStatusForCreditCard(string webapikey, long userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doInternalGetStatusForCreditCard", new object[] {
                    webapikey,
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoInternalGetStatusForCreditCard(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doInternalGetStatusForCreditCardAsync(string webapikey, long userid) {
        this.doInternalGetStatusForCreditCardAsync(webapikey, userid, null);
    }
    
    /// <remarks/>
    public void doInternalGetStatusForCreditCardAsync(string webapikey, long userid, object userState) {
        if ((this.doInternalGetStatusForCreditCardOperationCompleted == null)) {
            this.doInternalGetStatusForCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoInternalGetStatusForCreditCardOperationCompleted);
        }
        this.InvokeAsync("doInternalGetStatusForCreditCard", new object[] {
                    webapikey,
                    userid}, this.doInternalGetStatusForCreditCardOperationCompleted, userState);
    }
    
    private void OndoInternalGetStatusForCreditCardOperationCompleted(object arg) {
        if ((this.doInternalGetStatusForCreditCardCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doInternalGetStatusForCreditCardCompleted(this, new doInternalGetStatusForCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dointernalsubmitfordebitcard", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("application-id")]
    public string doInternalSubmitForDebitCard([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid) {
        object[] results = this.Invoke("doInternalSubmitForDebitCard", new object[] {
                    webapikey,
                    userid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoInternalSubmitForDebitCard(string webapikey, long userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doInternalSubmitForDebitCard", new object[] {
                    webapikey,
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoInternalSubmitForDebitCard(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doInternalSubmitForDebitCardAsync(string webapikey, long userid) {
        this.doInternalSubmitForDebitCardAsync(webapikey, userid, null);
    }
    
    /// <remarks/>
    public void doInternalSubmitForDebitCardAsync(string webapikey, long userid, object userState) {
        if ((this.doInternalSubmitForDebitCardOperationCompleted == null)) {
            this.doInternalSubmitForDebitCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoInternalSubmitForDebitCardOperationCompleted);
        }
        this.InvokeAsync("doInternalSubmitForDebitCard", new object[] {
                    webapikey,
                    userid}, this.doInternalSubmitForDebitCardOperationCompleted, userState);
    }
    
    private void OndoInternalSubmitForDebitCardOperationCompleted(object arg) {
        if ((this.doInternalSubmitForDebitCardCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doInternalSubmitForDebitCardCompleted(this, new doInternalSubmitForDebitCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dointernalsubmitforcreditcard", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("application-id")]
    public string doInternalSubmitForCreditCard([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid) {
        object[] results = this.Invoke("doInternalSubmitForCreditCard", new object[] {
                    webapikey,
                    userid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoInternalSubmitForCreditCard(string webapikey, long userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doInternalSubmitForCreditCard", new object[] {
                    webapikey,
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoInternalSubmitForCreditCard(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doInternalSubmitForCreditCardAsync(string webapikey, long userid) {
        this.doInternalSubmitForCreditCardAsync(webapikey, userid, null);
    }
    
    /// <remarks/>
    public void doInternalSubmitForCreditCardAsync(string webapikey, long userid, object userState) {
        if ((this.doInternalSubmitForCreditCardOperationCompleted == null)) {
            this.doInternalSubmitForCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoInternalSubmitForCreditCardOperationCompleted);
        }
        this.InvokeAsync("doInternalSubmitForCreditCard", new object[] {
                    webapikey,
                    userid}, this.doInternalSubmitForCreditCardOperationCompleted, userState);
    }
    
    private void OndoInternalSubmitForCreditCardOperationCompleted(object arg) {
        if ((this.doInternalSubmitForCreditCardCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doInternalSubmitForCreditCardCompleted(this, new doInternalSubmitForCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetfavouritesellers", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("s-favourite-sellers-list")]
    public FavouritesSellersStruct[] doGetFavouriteSellers([System.Xml.Serialization.SoapElementAttribute("session-handle-part")] string sessionhandlepart) {
        object[] results = this.Invoke("doGetFavouriteSellers", new object[] {
                    sessionhandlepart});
        return ((FavouritesSellersStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetFavouriteSellers(string sessionhandlepart, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetFavouriteSellers", new object[] {
                    sessionhandlepart}, callback, asyncState);
    }
    
    /// <remarks/>
    public FavouritesSellersStruct[] EnddoGetFavouriteSellers(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((FavouritesSellersStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetFavouriteSellersAsync(string sessionhandlepart) {
        this.doGetFavouriteSellersAsync(sessionhandlepart, null);
    }
    
    /// <remarks/>
    public void doGetFavouriteSellersAsync(string sessionhandlepart, object userState) {
        if ((this.doGetFavouriteSellersOperationCompleted == null)) {
            this.doGetFavouriteSellersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetFavouriteSellersOperationCompleted);
        }
        this.InvokeAsync("doGetFavouriteSellers", new object[] {
                    sessionhandlepart}, this.doGetFavouriteSellersOperationCompleted, userState);
    }
    
    private void OndoGetFavouriteSellersOperationCompleted(object arg) {
        if ((this.doGetFavouriteSellersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetFavouriteSellersCompleted(this, new doGetFavouriteSellersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetfavouritecategories", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("s-favourite-categories-list")]
    public FavouritesCategoriesStruct[] doGetFavouriteCategories([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetFavouriteCategories", new object[] {
                    sessionhandle});
        return ((FavouritesCategoriesStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetFavouriteCategories(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetFavouriteCategories", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public FavouritesCategoriesStruct[] EnddoGetFavouriteCategories(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((FavouritesCategoriesStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetFavouriteCategoriesAsync(string sessionhandle) {
        this.doGetFavouriteCategoriesAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetFavouriteCategoriesAsync(string sessionhandle, object userState) {
        if ((this.doGetFavouriteCategoriesOperationCompleted == null)) {
            this.doGetFavouriteCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetFavouriteCategoriesOperationCompleted);
        }
        this.InvokeAsync("doGetFavouriteCategories", new object[] {
                    sessionhandle}, this.doGetFavouriteCategoriesOperationCompleted, userState);
    }
    
    private void OndoGetFavouriteCategoriesOperationCompleted(object arg) {
        if ((this.doGetFavouriteCategoriesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetFavouriteCategoriesCompleted(this, new doGetFavouriteCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetspecialitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("s-special-list")]
    public SpecialAuctionStruct[] doGetSpecialItems([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("special-type")] int specialtype, [System.Xml.Serialization.SoapElementAttribute("special-group")] int specialgroup, int offset) {
        object[] results = this.Invoke("doGetSpecialItems", new object[] {
                    sessionhandle,
                    specialtype,
                    specialgroup,
                    offset});
        return ((SpecialAuctionStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSpecialItems(string sessionhandle, int specialtype, int specialgroup, int offset, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSpecialItems", new object[] {
                    sessionhandle,
                    specialtype,
                    specialgroup,
                    offset}, callback, asyncState);
    }
    
    /// <remarks/>
    public SpecialAuctionStruct[] EnddoGetSpecialItems(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SpecialAuctionStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSpecialItemsAsync(string sessionhandle, int specialtype, int specialgroup, int offset) {
        this.doGetSpecialItemsAsync(sessionhandle, specialtype, specialgroup, offset, null);
    }
    
    /// <remarks/>
    public void doGetSpecialItemsAsync(string sessionhandle, int specialtype, int specialgroup, int offset, object userState) {
        if ((this.doGetSpecialItemsOperationCompleted == null)) {
            this.doGetSpecialItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSpecialItemsOperationCompleted);
        }
        this.InvokeAsync("doGetSpecialItems", new object[] {
                    sessionhandle,
                    specialtype,
                    specialgroup,
                    offset}, this.doGetSpecialItemsOperationCompleted, userState);
    }
    
    private void OndoGetSpecialItemsOperationCompleted(object arg) {
        if ((this.doGetSpecialItemsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSpecialItemsCompleted(this, new doGetSpecialItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getpostbuydata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("items-post-buy-data")]
    public ItemPostBuyDataStruct[] doGetPostBuyData([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray) {
        object[] results = this.Invoke("doGetPostBuyData", new object[] {
                    sessionhandle,
                    itemsarray});
        return ((ItemPostBuyDataStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetPostBuyData(string sessionhandle, int[] itemsarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetPostBuyData", new object[] {
                    sessionhandle,
                    itemsarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemPostBuyDataStruct[] EnddoGetPostBuyData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ItemPostBuyDataStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetPostBuyDataAsync(string sessionhandle, int[] itemsarray) {
        this.doGetPostBuyDataAsync(sessionhandle, itemsarray, null);
    }
    
    /// <remarks/>
    public void doGetPostBuyDataAsync(string sessionhandle, int[] itemsarray, object userState) {
        if ((this.doGetPostBuyDataOperationCompleted == null)) {
            this.doGetPostBuyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPostBuyDataOperationCompleted);
        }
        this.InvokeAsync("doGetPostBuyData", new object[] {
                    sessionhandle,
                    itemsarray}, this.doGetPostBuyDataOperationCompleted, userState);
    }
    
    private void OndoGetPostBuyDataOperationCompleted(object arg) {
        if ((this.doGetPostBuyDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetPostBuyDataCompleted(this, new doGetPostBuyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getsessionhandleforwidget", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("session-handle")]
    public string doGetSessionHandleForWidget([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode) {
        object[] results = this.Invoke("doGetSessionHandleForWidget", new object[] {
                    webapikey,
                    countrycode});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSessionHandleForWidget(string webapikey, int countrycode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSessionHandleForWidget", new object[] {
                    webapikey,
                    countrycode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoGetSessionHandleForWidget(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doGetSessionHandleForWidgetAsync(string webapikey, int countrycode) {
        this.doGetSessionHandleForWidgetAsync(webapikey, countrycode, null);
    }
    
    /// <remarks/>
    public void doGetSessionHandleForWidgetAsync(string webapikey, int countrycode, object userState) {
        if ((this.doGetSessionHandleForWidgetOperationCompleted == null)) {
            this.doGetSessionHandleForWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSessionHandleForWidgetOperationCompleted);
        }
        this.InvokeAsync("doGetSessionHandleForWidget", new object[] {
                    webapikey,
                    countrycode}, this.doGetSessionHandleForWidgetOperationCompleted, userState);
    }
    
    private void OndoGetSessionHandleForWidgetOperationCompleted(object arg) {
        if ((this.doGetSessionHandleForWidgetCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSessionHandleForWidgetCompleted(this, new doGetSessionHandleForWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CatInfoType {
    
    private int catidField;
    
    private string catnameField;
    
    private int catparentField;
    
    private int catpositionField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-id")]
    public int catid {
        get {
            return this.catidField;
        }
        set {
            this.catidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-name")]
    public string catname {
        get {
            return this.catnameField;
        }
        set {
            this.catnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-parent")]
    public int catparent {
        get {
            return this.catparentField;
        }
        set {
            this.catparentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-position")]
    public int catposition {
        get {
            return this.catpositionField;
        }
        set {
            this.catpositionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserSentToDataStruct {
    
    private string userfirstnameField;
    
    private string userlastnameField;
    
    private string usercompanyField;
    
    private int usercountryidField;
    
    private long useridField;
    
    private string userpostcodeField;
    
    private string usercityField;
    
    private string useraddressField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-first-name")]
    public string userfirstname {
        get {
            return this.userfirstnameField;
        }
        set {
            this.userfirstnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-last-name")]
    public string userlastname {
        get {
            return this.userlastnameField;
        }
        set {
            this.userlastnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-company")]
    public string usercompany {
        get {
            return this.usercompanyField;
        }
        set {
            this.usercompanyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-country-id")]
    public int usercountryid {
        get {
            return this.usercountryidField;
        }
        set {
            this.usercountryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-id")]
    public long userid {
        get {
            return this.useridField;
        }
        set {
            this.useridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-postcode")]
    public string userpostcode {
        get {
            return this.userpostcodeField;
        }
        set {
            this.userpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-city")]
    public string usercity {
        get {
            return this.usercityField;
        }
        set {
            this.usercityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-address")]
    public string useraddress {
        get {
            return this.useraddressField;
        }
        set {
            this.useraddressField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserPostBuyDataStruct {
    
    private UserDataStruct userdataField;
    
    private UserSentToDataStruct usersenttodataField;
    
    private string[] userbankaccountsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-data")]
    public UserDataStruct userdata {
        get {
            return this.userdataField;
        }
        set {
            this.userdataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-sent-to-data")]
    public UserSentToDataStruct usersenttodata {
        get {
            return this.usersenttodataField;
        }
        set {
            this.usersenttodataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-bank-accounts")]
    public string[] userbankaccounts {
        get {
            return this.userbankaccountsField;
        }
        set {
            this.userbankaccountsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserDataStruct {
    
    private long useridField;
    
    private string userloginField;
    
    private int userratingField;
    
    private string userfirstnameField;
    
    private string userlastnameField;
    
    private string usermaidennameField;
    
    private string usercompanyField;
    
    private int usercountryidField;
    
    private int userstateidField;
    
    private string userpostcodeField;
    
    private string usercityField;
    
    private string useraddressField;
    
    private string useremailField;
    
    private string userphoneField;
    
    private string userphone2Field;
    
    private int userssstatusField;
    
    private int sitecountryidField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-id")]
    public long userid {
        get {
            return this.useridField;
        }
        set {
            this.useridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-login")]
    public string userlogin {
        get {
            return this.userloginField;
        }
        set {
            this.userloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-rating")]
    public int userrating {
        get {
            return this.userratingField;
        }
        set {
            this.userratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-first-name")]
    public string userfirstname {
        get {
            return this.userfirstnameField;
        }
        set {
            this.userfirstnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-last-name")]
    public string userlastname {
        get {
            return this.userlastnameField;
        }
        set {
            this.userlastnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-maiden-name")]
    public string usermaidenname {
        get {
            return this.usermaidennameField;
        }
        set {
            this.usermaidennameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-company")]
    public string usercompany {
        get {
            return this.usercompanyField;
        }
        set {
            this.usercompanyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-country-id")]
    public int usercountryid {
        get {
            return this.usercountryidField;
        }
        set {
            this.usercountryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-state-id")]
    public int userstateid {
        get {
            return this.userstateidField;
        }
        set {
            this.userstateidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-postcode")]
    public string userpostcode {
        get {
            return this.userpostcodeField;
        }
        set {
            this.userpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-city")]
    public string usercity {
        get {
            return this.usercityField;
        }
        set {
            this.usercityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-address")]
    public string useraddress {
        get {
            return this.useraddressField;
        }
        set {
            this.useraddressField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-email")]
    public string useremail {
        get {
            return this.useremailField;
        }
        set {
            this.useremailField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-phone")]
    public string userphone {
        get {
            return this.userphoneField;
        }
        set {
            this.userphoneField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-phone2")]
    public string userphone2 {
        get {
            return this.userphone2Field;
        }
        set {
            this.userphone2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-ss-status")]
    public int userssstatus {
        get {
            return this.userssstatusField;
        }
        set {
            this.userssstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-country-id")]
    public int sitecountryid {
        get {
            return this.sitecountryidField;
        }
        set {
            this.sitecountryidField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemPostBuyDataStruct {
    
    private long itemidField;
    
    private UserPostBuyDataStruct[] userspostbuydataField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("users-post-buy-data")]
    public UserPostBuyDataStruct[] userspostbuydata {
        get {
            return this.userspostbuydataField;
        }
        set {
            this.userspostbuydataField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SpecialAuctionStruct {
    
    private long itidField;
    
    private string itnameField;
    
    private float itpriceField;
    
    private int itisbuynowField;
    
    private float itbuynowpriceField;
    
    private int itbidcountField;
    
    private int itfotocountField;
    
    private long ittimeleftField;
    
    private float itendingtimeField;
    
    private int itcountryField;
    
    private int itislistingthumbField;
    
    private int itisescrowField;
    
    private long itselleridField;
    
    private float itsendcostpriceField;
    
    private int itisboldtitleField;
    
    private long itstartingtimeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-id")]
    public long itid {
        get {
            return this.itidField;
        }
        set {
            this.itidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-name")]
    public string itname {
        get {
            return this.itnameField;
        }
        set {
            this.itnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-price")]
    public float itprice {
        get {
            return this.itpriceField;
        }
        set {
            this.itpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-buy-now")]
    public int itisbuynow {
        get {
            return this.itisbuynowField;
        }
        set {
            this.itisbuynowField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-price")]
    public float itbuynowprice {
        get {
            return this.itbuynowpriceField;
        }
        set {
            this.itbuynowpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bid-count")]
    public int itbidcount {
        get {
            return this.itbidcountField;
        }
        set {
            this.itbidcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
    public int itfotocount {
        get {
            return this.itfotocountField;
        }
        set {
            this.itfotocountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-time-left")]
    public long ittimeleft {
        get {
            return this.ittimeleftField;
        }
        set {
            this.ittimeleftField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-ending-time")]
    public float itendingtime {
        get {
            return this.itendingtimeField;
        }
        set {
            this.itendingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-country")]
    public int itcountry {
        get {
            return this.itcountryField;
        }
        set {
            this.itcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-listing-thumb")]
    public int itislistingthumb {
        get {
            return this.itislistingthumbField;
        }
        set {
            this.itislistingthumbField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-escrow")]
    public int itisescrow {
        get {
            return this.itisescrowField;
        }
        set {
            this.itisescrowField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-id")]
    public long itsellerid {
        get {
            return this.itselleridField;
        }
        set {
            this.itselleridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-send-cost-price")]
    public float itsendcostprice {
        get {
            return this.itsendcostpriceField;
        }
        set {
            this.itsendcostpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-bold-title")]
    public int itisboldtitle {
        get {
            return this.itisboldtitleField;
        }
        set {
            this.itisboldtitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-time")]
    public long itstartingtime {
        get {
            return this.itstartingtimeField;
        }
        set {
            this.itstartingtimeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FavouritesCategoriesStruct {
    
    private int scategoryidField;
    
    private int ssubscriptionstatusField;
    
    private int spositionField;
    
    private int sbuynowonlyField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-category-id")]
    public int scategoryid {
        get {
            return this.scategoryidField;
        }
        set {
            this.scategoryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-subscription-status")]
    public int ssubscriptionstatus {
        get {
            return this.ssubscriptionstatusField;
        }
        set {
            this.ssubscriptionstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-position")]
    public int sposition {
        get {
            return this.spositionField;
        }
        set {
            this.spositionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-buy-now-only")]
    public int sbuynowonly {
        get {
            return this.sbuynowonlyField;
        }
        set {
            this.sbuynowonlyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FavouritesSellersStruct {
    
    private int sfavuseridField;
    
    private int ssubscriptionstatusField;
    
    private int spositionField;
    
    private int sbuynowonlyField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-fav-user-id")]
    public int sfavuserid {
        get {
            return this.sfavuseridField;
        }
        set {
            this.sfavuseridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-subscription-status")]
    public int ssubscriptionstatus {
        get {
            return this.ssubscriptionstatusField;
        }
        set {
            this.ssubscriptionstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-position")]
    public int sposition {
        get {
            return this.spositionField;
        }
        set {
            this.spositionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-buy-now-only")]
    public int sbuynowonly {
        get {
            return this.sbuynowonlyField;
        }
        set {
            this.sbuynowonlyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class InvoiceDataStruct {
    
    private string companynameField;
    
    private string companynipField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-name")]
    public string companyname {
        get {
            return this.companynameField;
        }
        set {
            this.companynameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-nip")]
    public string companynip {
        get {
            return this.companynipField;
        }
        set {
            this.companynipField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class StateInfoStruct {
    
    private int stateidField;
    
    private string statenameField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("state-id")]
    public int stateid {
        get {
            return this.stateidField;
        }
        set {
            this.stateidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("state-name")]
    public string statename {
        get {
            return this.statenameField;
        }
        set {
            this.statenameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ServiceInfoStruct {
    
    private int anitidField;
    
    private int ancatidField;
    
    private string anittitleField;
    
    private byte[] anitbodyField;
    
    private int countryidField;
    
    private long anitdateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-it-id")]
    public int anitid {
        get {
            return this.anitidField;
        }
        set {
            this.anitidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-cat-id")]
    public int ancatid {
        get {
            return this.ancatidField;
        }
        set {
            this.ancatidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-it-title")]
    public string anittitle {
        get {
            return this.anittitleField;
        }
        set {
            this.anittitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-it-body", DataType="base64Binary")]
    public byte[] anitbody {
        get {
            return this.anitbodyField;
        }
        set {
            this.anitbodyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("country-id")]
    public int countryid {
        get {
            return this.countryidField;
        }
        set {
            this.countryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-it-date")]
    public long anitdate {
        get {
            return this.anitdateField;
        }
        set {
            this.anitdateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ServiceInfoCatStruct {
    
    private int ancatidField;
    
    private string ancatnameField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-cat-id")]
    public int ancatid {
        get {
            return this.ancatidField;
        }
        set {
            this.ancatidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-cat-name")]
    public string ancatname {
        get {
            return this.ancatnameField;
        }
        set {
            this.ancatnameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class BlackListResStruct {
    
    private long useridField;
    
    private int resultField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-id")]
    public long userid {
        get {
            return this.useridField;
        }
        set {
            this.useridField = value;
        }
    }
    
    /// <remarks/>
    public int result {
        get {
            return this.resultField;
        }
        set {
            this.resultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class BlackListStruct {
    
    private long useridField;
    
    private string userloginField;
    
    private int userratingField;
    
    private int usercountryField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-id")]
    public long userid {
        get {
            return this.useridField;
        }
        set {
            this.useridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-login")]
    public string userlogin {
        get {
            return this.userloginField;
        }
        set {
            this.userloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-rating")]
    public int userrating {
        get {
            return this.userratingField;
        }
        set {
            this.userratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-country")]
    public int usercountry {
        get {
            return this.usercountryField;
        }
        set {
            this.usercountryField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class WaitFeedbackStruct {
    
    private int feitemidField;
    
    private string feitemnameField;
    
    private int fetouseridField;
    
    private int feopField;
    
    private string feanscommenttypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-item-id")]
    public int feitemid {
        get {
            return this.feitemidField;
        }
        set {
            this.feitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-item-name")]
    public string feitemname {
        get {
            return this.feitemnameField;
        }
        set {
            this.feitemnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-to-user-id")]
    public int fetouserid {
        get {
            return this.fetouseridField;
        }
        set {
            this.fetouseridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-op")]
    public int feop {
        get {
            return this.feopField;
        }
        set {
            this.feopField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-ans-comment-type")]
    public string feanscommenttype {
        get {
            return this.feanscommenttypeField;
        }
        set {
            this.feanscommenttypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemInfoExt {
    
    private long itidField;
    
    private int itcountryField;
    
    private string itnameField;
    
    private float itpriceField;
    
    private int itbidcountField;
    
    private float itendingtimeField;
    
    private long itselleridField;
    
    private string itsellerloginField;
    
    private int itsellerratingField;
    
    private long itstartingtimeField;
    
    private float itstartingpriceField;
    
    private int itquantityField;
    
    private int itfotocountField;
    
    private float itreservepriceField;
    
    private string itlocationField;
    
    private float itbuynowpriceField;
    
    private int itbuynowactiveField;
    
    private int ithighbidderField;
    
    private string ithighbidderloginField;
    
    private string itdescriptionField;
    
    private int itoptionsField;
    
    private int itstateField;
    
    private float itwiretransferField;
    
    private float itpostdeliveryField;
    
    private string itpostinfoField;
    
    private int itquantitytypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-id")]
    public long itid {
        get {
            return this.itidField;
        }
        set {
            this.itidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-country")]
    public int itcountry {
        get {
            return this.itcountryField;
        }
        set {
            this.itcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-name")]
    public string itname {
        get {
            return this.itnameField;
        }
        set {
            this.itnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-price")]
    public float itprice {
        get {
            return this.itpriceField;
        }
        set {
            this.itpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bid-count")]
    public int itbidcount {
        get {
            return this.itbidcountField;
        }
        set {
            this.itbidcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-ending-time")]
    public float itendingtime {
        get {
            return this.itendingtimeField;
        }
        set {
            this.itendingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-id")]
    public long itsellerid {
        get {
            return this.itselleridField;
        }
        set {
            this.itselleridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-login")]
    public string itsellerlogin {
        get {
            return this.itsellerloginField;
        }
        set {
            this.itsellerloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-rating")]
    public int itsellerrating {
        get {
            return this.itsellerratingField;
        }
        set {
            this.itsellerratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-time")]
    public long itstartingtime {
        get {
            return this.itstartingtimeField;
        }
        set {
            this.itstartingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-price")]
    public float itstartingprice {
        get {
            return this.itstartingpriceField;
        }
        set {
            this.itstartingpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-quantity")]
    public int itquantity {
        get {
            return this.itquantityField;
        }
        set {
            this.itquantityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
    public int itfotocount {
        get {
            return this.itfotocountField;
        }
        set {
            this.itfotocountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-reserve-price")]
    public float itreserveprice {
        get {
            return this.itreservepriceField;
        }
        set {
            this.itreservepriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-location")]
    public string itlocation {
        get {
            return this.itlocationField;
        }
        set {
            this.itlocationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-price")]
    public float itbuynowprice {
        get {
            return this.itbuynowpriceField;
        }
        set {
            this.itbuynowpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-active")]
    public int itbuynowactive {
        get {
            return this.itbuynowactiveField;
        }
        set {
            this.itbuynowactiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-high-bidder")]
    public int ithighbidder {
        get {
            return this.ithighbidderField;
        }
        set {
            this.ithighbidderField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-high-bidder-login")]
    public string ithighbidderlogin {
        get {
            return this.ithighbidderloginField;
        }
        set {
            this.ithighbidderloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-description")]
    public string itdescription {
        get {
            return this.itdescriptionField;
        }
        set {
            this.itdescriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-options")]
    public int itoptions {
        get {
            return this.itoptionsField;
        }
        set {
            this.itoptionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-state")]
    public int itstate {
        get {
            return this.itstateField;
        }
        set {
            this.itstateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-wire-transfer")]
    public float itwiretransfer {
        get {
            return this.itwiretransferField;
        }
        set {
            this.itwiretransferField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-post-delivery")]
    public float itpostdelivery {
        get {
            return this.itpostdeliveryField;
        }
        set {
            this.itpostdeliveryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-post-info")]
    public string itpostinfo {
        get {
            return this.itpostinfoField;
        }
        set {
            this.itpostinfoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-quantity-type")]
    public int itquantitytype {
        get {
            return this.itquantitytypeField;
        }
        set {
            this.itquantitytypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FeedbackResultStruct {
    
    private int feitemidField;
    
    private int feidField;
    
    private string fefaultcodeField;
    
    private string fefaultdescField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-item-id")]
    public int feitemid {
        get {
            return this.feitemidField;
        }
        set {
            this.feitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-id")]
    public int feid {
        get {
            return this.feidField;
        }
        set {
            this.feidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-fault-code")]
    public string fefaultcode {
        get {
            return this.fefaultcodeField;
        }
        set {
            this.fefaultcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-fault-desc")]
    public string fefaultdesc {
        get {
            return this.fefaultdescField;
        }
        set {
            this.fefaultdescField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FeedbackManyStruct {
    
    private int feitemidField;
    
    private int fefromuseridField;
    
    private int fetouseridField;
    
    private string fecommentField;
    
    private string fecommenttypeField;
    
    private int feopField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-item-id")]
    public int feitemid {
        get {
            return this.feitemidField;
        }
        set {
            this.feitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-from-user-id")]
    public int fefromuserid {
        get {
            return this.fefromuseridField;
        }
        set {
            this.fefromuseridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-to-user-id")]
    public int fetouserid {
        get {
            return this.fetouseridField;
        }
        set {
            this.fetouseridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-comment")]
    public string fecomment {
        get {
            return this.fecommentField;
        }
        set {
            this.fecommentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-comment-type")]
    public string fecommenttype {
        get {
            return this.fecommenttypeField;
        }
        set {
            this.fecommenttypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-op")]
    public int feop {
        get {
            return this.feopField;
        }
        set {
            this.feopField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class TemplateInfoType {
    
    private int templateidField;
    
    private string templatenameField;
    
    private byte[] templatethumbField;
    
    private byte[] templatedescimagesField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("template-id")]
    public int templateid {
        get {
            return this.templateidField;
        }
        set {
            this.templateidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("template-name")]
    public string templatename {
        get {
            return this.templatenameField;
        }
        set {
            this.templatenameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("template-thumb", DataType="base64Binary")]
    public byte[] templatethumb {
        get {
            return this.templatethumbField;
        }
        set {
            this.templatethumbField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("template-desc-images", DataType="base64Binary")]
    public byte[] templatedescimages {
        get {
            return this.templatedescimagesField;
        }
        set {
            this.templatedescimagesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CountryInfoType {
    
    private int countryidField;
    
    private string countrynameField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("country-id")]
    public int countryid {
        get {
            return this.countryidField;
        }
        set {
            this.countryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("country-name")]
    public string countryname {
        get {
            return this.countrynameField;
        }
        set {
            this.countrynameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemTransStruct {
    
    private string[] bidwonlistField;
    
    private MyContactList usercontactlistField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("bid-won-list")]
    public string[] bidwonlist {
        get {
            return this.bidwonlistField;
        }
        set {
            this.bidwonlistField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-contact-list")]
    public MyContactList usercontactlist {
        get {
            return this.usercontactlistField;
        }
        set {
            this.usercontactlistField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class MyContactList {
    
    private int contactuseridField;
    
    private string contactnickField;
    
    private string contactfirstnameField;
    
    private string contactlastnameField;
    
    private string contactcompanyField;
    
    private string contactemailField;
    
    private string contactstreetField;
    
    private string contactpostcodeField;
    
    private string contactcityField;
    
    private string contactcountryField;
    
    private string contactphoneField;
    
    private string contactphone2Field;
    
    private string contactratingField;
    
    private string contactblockedField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-user-id")]
    public int contactuserid {
        get {
            return this.contactuseridField;
        }
        set {
            this.contactuseridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-nick")]
    public string contactnick {
        get {
            return this.contactnickField;
        }
        set {
            this.contactnickField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-first-name")]
    public string contactfirstname {
        get {
            return this.contactfirstnameField;
        }
        set {
            this.contactfirstnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-last-name")]
    public string contactlastname {
        get {
            return this.contactlastnameField;
        }
        set {
            this.contactlastnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-company")]
    public string contactcompany {
        get {
            return this.contactcompanyField;
        }
        set {
            this.contactcompanyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-email")]
    public string contactemail {
        get {
            return this.contactemailField;
        }
        set {
            this.contactemailField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-street")]
    public string contactstreet {
        get {
            return this.contactstreetField;
        }
        set {
            this.contactstreetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-postcode")]
    public string contactpostcode {
        get {
            return this.contactpostcodeField;
        }
        set {
            this.contactpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-city")]
    public string contactcity {
        get {
            return this.contactcityField;
        }
        set {
            this.contactcityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-country")]
    public string contactcountry {
        get {
            return this.contactcountryField;
        }
        set {
            this.contactcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-phone")]
    public string contactphone {
        get {
            return this.contactphoneField;
        }
        set {
            this.contactphoneField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-phone2")]
    public string contactphone2 {
        get {
            return this.contactphone2Field;
        }
        set {
            this.contactphone2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-rating")]
    public string contactrating {
        get {
            return this.contactratingField;
        }
        set {
            this.contactratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-blocked")]
    public string contactblocked {
        get {
            return this.contactblockedField;
        }
        set {
            this.contactblockedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemBilling {
    
    private string binameField;
    
    private string bivalueField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("bi-name")]
    public string biname {
        get {
            return this.binameField;
        }
        set {
            this.binameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("bi-value")]
    public string bivalue {
        get {
            return this.bivalueField;
        }
        set {
            this.bivalueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SearchOptType {
    
    private string searchstringField;
    
    private int searchoptionsField;
    
    private int searchorderField;
    
    private int searchordertypeField;
    
    private int searchcountryField;
    
    private int searchcategoryField;
    
    private int searchoffsetField;
    
    private string searchcityField;
    
    private int searchstateField;
    
    private float searchpricefromField;
    
    private float searchpricetoField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-string")]
    public string searchstring {
        get {
            return this.searchstringField;
        }
        set {
            this.searchstringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-options")]
    public int searchoptions {
        get {
            return this.searchoptionsField;
        }
        set {
            this.searchoptionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-order")]
    public int searchorder {
        get {
            return this.searchorderField;
        }
        set {
            this.searchorderField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-order-type")]
    public int searchordertype {
        get {
            return this.searchordertypeField;
        }
        set {
            this.searchordertypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-country")]
    public int searchcountry {
        get {
            return this.searchcountryField;
        }
        set {
            this.searchcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-category")]
    public int searchcategory {
        get {
            return this.searchcategoryField;
        }
        set {
            this.searchcategoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-offset")]
    public int searchoffset {
        get {
            return this.searchoffsetField;
        }
        set {
            this.searchoffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-city")]
    public string searchcity {
        get {
            return this.searchcityField;
        }
        set {
            this.searchcityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-state")]
    public int searchstate {
        get {
            return this.searchstateField;
        }
        set {
            this.searchstateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-price-from")]
    public float searchpricefrom {
        get {
            return this.searchpricefromField;
        }
        set {
            this.searchpricefromField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-price-to")]
    public float searchpriceto {
        get {
            return this.searchpricetoField;
        }
        set {
            this.searchpricetoField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class MyFeedbackListStruct2 {
    
    private string[] feedbackarrayField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("feedback-array")]
    public string[] feedbackarray {
        get {
            return this.feedbackarrayField;
        }
        set {
            this.feedbackarrayField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class MyAccountStruct2 {
    
    private string[] myaccountarrayField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("my-account-array")]
    public string[] myaccountarray {
        get {
            return this.myaccountarrayField;
        }
        set {
            this.myaccountarrayField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SiteJournalInfo {
    
    private int itemsnumberField;
    
    private long lastitemdateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("items-number")]
    public int itemsnumber {
        get {
            return this.itemsnumberField;
        }
        set {
            this.itemsnumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("last-item-date")]
    public long lastitemdate {
        get {
            return this.lastitemdateField;
        }
        set {
            this.lastitemdateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SiteJournal {
    
    private long rowidField;
    
    private long itemidField;
    
    private string changetypeField;
    
    private long changedateField;
    
    private float currentpriceField;
    
    private long itemselleridField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("row-id")]
    public long rowid {
        get {
            return this.rowidField;
        }
        set {
            this.rowidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("change-type")]
    public string changetype {
        get {
            return this.changetypeField;
        }
        set {
            this.changetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("change-date")]
    public long changedate {
        get {
            return this.changedateField;
        }
        set {
            this.changedateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("current-price")]
    public float currentprice {
        get {
            return this.currentpriceField;
        }
        set {
            this.currentpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-seller-id")]
    public long itemsellerid {
        get {
            return this.itemselleridField;
        }
        set {
            this.itemselleridField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FeedbackList {
    
    private int fidField;
    
    private int fitemidField;
    
    private int ffromidField;
    
    private int ftoidField;
    
    private long fdateField;
    
    private string ftypeField;
    
    private string fdescField;
    
    private long fcorrectdateField;
    
    private string fcorrecttextField;
    
    private string freceivertypeField;
    
    private string fuserloginField;
    
    private string fuserratingField;
    
    private string fusercountryField;
    
    private int fuserblockedField;
    
    private int fuserssellerField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-id")]
    public int fid {
        get {
            return this.fidField;
        }
        set {
            this.fidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-item-id")]
    public int fitemid {
        get {
            return this.fitemidField;
        }
        set {
            this.fitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-from-id")]
    public int ffromid {
        get {
            return this.ffromidField;
        }
        set {
            this.ffromidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-to-id")]
    public int ftoid {
        get {
            return this.ftoidField;
        }
        set {
            this.ftoidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-date")]
    public long fdate {
        get {
            return this.fdateField;
        }
        set {
            this.fdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-type")]
    public string ftype {
        get {
            return this.ftypeField;
        }
        set {
            this.ftypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-desc")]
    public string fdesc {
        get {
            return this.fdescField;
        }
        set {
            this.fdescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-correct-date")]
    public long fcorrectdate {
        get {
            return this.fcorrectdateField;
        }
        set {
            this.fcorrectdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-correct-text")]
    public string fcorrecttext {
        get {
            return this.fcorrecttextField;
        }
        set {
            this.fcorrecttextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-receiver-type")]
    public string freceivertype {
        get {
            return this.freceivertypeField;
        }
        set {
            this.freceivertypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-user-login")]
    public string fuserlogin {
        get {
            return this.fuserloginField;
        }
        set {
            this.fuserloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-user-rating")]
    public string fuserrating {
        get {
            return this.fuserratingField;
        }
        set {
            this.fuserratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-user-country")]
    public string fusercountry {
        get {
            return this.fusercountryField;
        }
        set {
            this.fusercountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-user-blocked")]
    public int fuserblocked {
        get {
            return this.fuserblockedField;
        }
        set {
            this.fuserblockedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-user-sseller")]
    public int fusersseller {
        get {
            return this.fuserssellerField;
        }
        set {
            this.fuserssellerField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class BidListStruct2 {
    
    private string[] bidsarrayField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("bids-array")]
    public string[] bidsarray {
        get {
            return this.bidsarrayField;
        }
        set {
            this.bidsarrayField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ShowUserFeedbacks {
    
    private int userflastweekField;
    
    private int userflastmonthField;
    
    private int userfallField;
    
    private int userfsolditemsField;
    
    private int userfbuyitemsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-f-last-week")]
    public int userflastweek {
        get {
            return this.userflastweekField;
        }
        set {
            this.userflastweekField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-f-last-month")]
    public int userflastmonth {
        get {
            return this.userflastmonthField;
        }
        set {
            this.userflastmonthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-f-all")]
    public int userfall {
        get {
            return this.userfallField;
        }
        set {
            this.userfallField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-f-sold-items")]
    public int userfsolditems {
        get {
            return this.userfsolditemsField;
        }
        set {
            this.userfsolditemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-f-buy-items")]
    public int userfbuyitems {
        get {
            return this.userfbuyitemsField;
        }
        set {
            this.userfbuyitemsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SearchResponseType {
    
    private long sitidField;
    
    private string sitnameField;
    
    private float sitpriceField;
    
    private float sitstartingpriceField;
    
    private int sitisbuynowField;
    
    private float sitbuynowpriceField;
    
    private int sitbidcountField;
    
    private int sitfotocountField;
    
    private long sitstartingtimeField;
    
    private long sitendingtimeField;
    
    private long sittimeleftField;
    
    private string sitcityField;
    
    private int sitstateField;
    
    private int sitcountryField;
    
    private int sitcategoryidField;
    
    private int sitfeaturedField;
    
    private string sitthumburlField;
    
    private int sitthumbField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-id")]
    public long sitid {
        get {
            return this.sitidField;
        }
        set {
            this.sitidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-name")]
    public string sitname {
        get {
            return this.sitnameField;
        }
        set {
            this.sitnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-price")]
    public float sitprice {
        get {
            return this.sitpriceField;
        }
        set {
            this.sitpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-starting-price")]
    public float sitstartingprice {
        get {
            return this.sitstartingpriceField;
        }
        set {
            this.sitstartingpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-is-buy-now")]
    public int sitisbuynow {
        get {
            return this.sitisbuynowField;
        }
        set {
            this.sitisbuynowField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-buy-now-price")]
    public float sitbuynowprice {
        get {
            return this.sitbuynowpriceField;
        }
        set {
            this.sitbuynowpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-bid-count")]
    public int sitbidcount {
        get {
            return this.sitbidcountField;
        }
        set {
            this.sitbidcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-foto-count")]
    public int sitfotocount {
        get {
            return this.sitfotocountField;
        }
        set {
            this.sitfotocountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-starting-time")]
    public long sitstartingtime {
        get {
            return this.sitstartingtimeField;
        }
        set {
            this.sitstartingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-ending-time")]
    public long sitendingtime {
        get {
            return this.sitendingtimeField;
        }
        set {
            this.sitendingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-time-left")]
    public long sittimeleft {
        get {
            return this.sittimeleftField;
        }
        set {
            this.sittimeleftField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-city")]
    public string sitcity {
        get {
            return this.sitcityField;
        }
        set {
            this.sitcityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-state")]
    public int sitstate {
        get {
            return this.sitstateField;
        }
        set {
            this.sitstateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-country")]
    public int sitcountry {
        get {
            return this.sitcountryField;
        }
        set {
            this.sitcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-category-id")]
    public int sitcategoryid {
        get {
            return this.sitcategoryidField;
        }
        set {
            this.sitcategoryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-featured")]
    public int sitfeatured {
        get {
            return this.sitfeaturedField;
        }
        set {
            this.sitfeaturedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-thumb-url")]
    public string sitthumburl {
        get {
            return this.sitthumburlField;
        }
        set {
            this.sitthumburlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-thumb")]
    public int sitthumb {
        get {
            return this.sitthumbField;
        }
        set {
            this.sitthumbField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class InfoCatList {
    
    private long catidField;
    
    private string catnameField;
    
    private long catitemscountField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-id")]
    public long catid {
        get {
            return this.catidField;
        }
        set {
            this.catidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-name")]
    public string catname {
        get {
            return this.catnameField;
        }
        set {
            this.catnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-items-count")]
    public long catitemscount {
        get {
            return this.catitemscountField;
        }
        set {
            this.catitemscountField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class PriceCatInfo {
    
    private float priceminField;
    
    private float pricemaxField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("price-min")]
    public float pricemin {
        get {
            return this.priceminField;
        }
        set {
            this.priceminField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("price-max")]
    public float pricemax {
        get {
            return this.pricemaxField;
        }
        set {
            this.pricemaxField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class DurationTimeInfo {
    
    private int durationoptionField;
    
    private int durationvalueField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("duration-option")]
    public int durationoption {
        get {
            return this.durationoptionField;
        }
        set {
            this.durationoptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("duration-value")]
    public int durationvalue {
        get {
            return this.durationvalueField;
        }
        set {
            this.durationvalueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SysStatusType {
    
    private int countryidField;
    
    private string programversionField;
    
    private string catsversionField;
    
    private string apiversionField;
    
    private string attribversionField;
    
    private string formsellversionField;
    
    private string siteversionField;
    
    private long verkeyField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("country-id")]
    public int countryid {
        get {
            return this.countryidField;
        }
        set {
            this.countryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("program-version")]
    public string programversion {
        get {
            return this.programversionField;
        }
        set {
            this.programversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cats-version")]
    public string catsversion {
        get {
            return this.catsversionField;
        }
        set {
            this.catsversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("api-version")]
    public string apiversion {
        get {
            return this.apiversionField;
        }
        set {
            this.apiversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("attrib-version")]
    public string attribversion {
        get {
            return this.attribversionField;
        }
        set {
            this.attribversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("form-sell-version")]
    public string formsellversion {
        get {
            return this.formsellversionField;
        }
        set {
            this.formsellversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-version")]
    public string siteversion {
        get {
            return this.siteversionField;
        }
        set {
            this.siteversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ver-key")]
    public long verkey {
        get {
            return this.verkeyField;
        }
        set {
            this.verkeyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserItemList {
    
    private long itidField;
    
    private string itnameField;
    
    private float itpriceField;
    
    private float itbuynowpriceField;
    
    private int itbidcountField;
    
    private long ittimeleftField;
    
    private int itfotocountField;
    
    private int itislistingthumbField;
    
    private int itisboldtitleField;
    
    private int itisbuynowField;
    
    private int itcountryField;
    
    private int itisescrowField;
    
    private long itstartingtimeField;
    
    private int itisreservedpriceField;
    
    private string itthumburlField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-id")]
    public long itid {
        get {
            return this.itidField;
        }
        set {
            this.itidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-name")]
    public string itname {
        get {
            return this.itnameField;
        }
        set {
            this.itnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-price")]
    public float itprice {
        get {
            return this.itpriceField;
        }
        set {
            this.itpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-price")]
    public float itbuynowprice {
        get {
            return this.itbuynowpriceField;
        }
        set {
            this.itbuynowpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bid-count")]
    public int itbidcount {
        get {
            return this.itbidcountField;
        }
        set {
            this.itbidcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-time-left")]
    public long ittimeleft {
        get {
            return this.ittimeleftField;
        }
        set {
            this.ittimeleftField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
    public int itfotocount {
        get {
            return this.itfotocountField;
        }
        set {
            this.itfotocountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-listing-thumb")]
    public int itislistingthumb {
        get {
            return this.itislistingthumbField;
        }
        set {
            this.itislistingthumbField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-bold-title")]
    public int itisboldtitle {
        get {
            return this.itisboldtitleField;
        }
        set {
            this.itisboldtitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-buy-now")]
    public int itisbuynow {
        get {
            return this.itisbuynowField;
        }
        set {
            this.itisbuynowField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-country")]
    public int itcountry {
        get {
            return this.itcountryField;
        }
        set {
            this.itcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-escrow")]
    public int itisescrow {
        get {
            return this.itisescrowField;
        }
        set {
            this.itisescrowField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-time")]
    public long itstartingtime {
        get {
            return this.itstartingtimeField;
        }
        set {
            this.itstartingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-reserved-price")]
    public int itisreservedprice {
        get {
            return this.itisreservedpriceField;
        }
        set {
            this.itisreservedpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-thumb-url")]
    public string itthumburl {
        get {
            return this.itthumburlField;
        }
        set {
            this.itthumburlField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SiteInfoType {
    
    private string sitenameField;
    
    private string siteurlField;
    
    private int sitecountrycodeField;
    
    private string sitecodepageField;
    
    private byte[] sitelogogifField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-name")]
    public string sitename {
        get {
            return this.sitenameField;
        }
        set {
            this.sitenameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-url")]
    public string siteurl {
        get {
            return this.siteurlField;
        }
        set {
            this.siteurlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-country-code")]
    public int sitecountrycode {
        get {
            return this.sitecountrycodeField;
        }
        set {
            this.sitecountrycodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-code-page")]
    public string sitecodepage {
        get {
            return this.sitecodepageField;
        }
        set {
            this.sitecodepageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-logo-gif", DataType="base64Binary")]
    public byte[] sitelogogif {
        get {
            return this.sitelogogifField;
        }
        set {
            this.sitelogogifField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SiteFlagInfoType {
    
    private string sitenameField;
    
    private string siteurlField;
    
    private int sitecountrycodeField;
    
    private string sitecodepageField;
    
    private byte[] sitelogogifField;
    
    private byte[] siteflaggifField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-name")]
    public string sitename {
        get {
            return this.sitenameField;
        }
        set {
            this.sitenameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-url")]
    public string siteurl {
        get {
            return this.siteurlField;
        }
        set {
            this.siteurlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-country-code")]
    public int sitecountrycode {
        get {
            return this.sitecountrycodeField;
        }
        set {
            this.sitecountrycodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-code-page")]
    public string sitecodepage {
        get {
            return this.sitecodepageField;
        }
        set {
            this.sitecodepageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-logo-gif", DataType="base64Binary")]
    public byte[] sitelogogif {
        get {
            return this.sitelogogifField;
        }
        set {
            this.sitelogogifField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-flag-gif", DataType="base64Binary")]
    public byte[] siteflaggif {
        get {
            return this.siteflaggifField;
        }
        set {
            this.siteflaggifField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SellFormType {
    
    private int sellformidField;
    
    private string sellformtitleField;
    
    private int sellformcatField;
    
    private int sellformtypeField;
    
    private int sellformrestypeField;
    
    private int sellformdefvalueField;
    
    private int sellformoptField;
    
    private int sellformposField;
    
    private int sellformlengthField;
    
    private float sellminvalueField;
    
    private float sellmaxvalueField;
    
    private string sellformdescField;
    
    private string sellformoptsvaluesField;
    
    private string sellformfielddescField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-id")]
    public int sellformid {
        get {
            return this.sellformidField;
        }
        set {
            this.sellformidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-title")]
    public string sellformtitle {
        get {
            return this.sellformtitleField;
        }
        set {
            this.sellformtitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-cat")]
    public int sellformcat {
        get {
            return this.sellformcatField;
        }
        set {
            this.sellformcatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-type")]
    public int sellformtype {
        get {
            return this.sellformtypeField;
        }
        set {
            this.sellformtypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-res-type")]
    public int sellformrestype {
        get {
            return this.sellformrestypeField;
        }
        set {
            this.sellformrestypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-def-value")]
    public int sellformdefvalue {
        get {
            return this.sellformdefvalueField;
        }
        set {
            this.sellformdefvalueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-opt")]
    public int sellformopt {
        get {
            return this.sellformoptField;
        }
        set {
            this.sellformoptField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-pos")]
    public int sellformpos {
        get {
            return this.sellformposField;
        }
        set {
            this.sellformposField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-length")]
    public int sellformlength {
        get {
            return this.sellformlengthField;
        }
        set {
            this.sellformlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-min-value")]
    public float sellminvalue {
        get {
            return this.sellminvalueField;
        }
        set {
            this.sellminvalueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-max-value")]
    public float sellmaxvalue {
        get {
            return this.sellmaxvalueField;
        }
        set {
            this.sellmaxvalueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-desc")]
    public string sellformdesc {
        get {
            return this.sellformdescField;
        }
        set {
            this.sellformdescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-opts-values")]
    public string sellformoptsvalues {
        get {
            return this.sellformoptsvaluesField;
        }
        set {
            this.sellformoptsvaluesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-field-desc")]
    public string sellformfielddesc {
        get {
            return this.sellformfielddescField;
        }
        set {
            this.sellformfielddescField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class BillingDataType {
    
    private int billingidField;
    
    private string billingtypeField;
    
    private string billingfixpercField;
    
    private string billingnameField;
    
    private string billingrangefromField;
    
    private string billingrangetoField;
    
    private string billingcatField;
    
    private string billingrateField;
    
    private int billingauctiontypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-id")]
    public int billingid {
        get {
            return this.billingidField;
        }
        set {
            this.billingidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-type")]
    public string billingtype {
        get {
            return this.billingtypeField;
        }
        set {
            this.billingtypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-fixperc")]
    public string billingfixperc {
        get {
            return this.billingfixpercField;
        }
        set {
            this.billingfixpercField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-name")]
    public string billingname {
        get {
            return this.billingnameField;
        }
        set {
            this.billingnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-range-from")]
    public string billingrangefrom {
        get {
            return this.billingrangefromField;
        }
        set {
            this.billingrangefromField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-range-to")]
    public string billingrangeto {
        get {
            return this.billingrangetoField;
        }
        set {
            this.billingrangetoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-cat")]
    public string billingcat {
        get {
            return this.billingcatField;
        }
        set {
            this.billingcatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-rate")]
    public string billingrate {
        get {
            return this.billingrateField;
        }
        set {
            this.billingrateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-auction-type")]
    public int billingauctiontype {
        get {
            return this.billingauctiontypeField;
        }
        set {
            this.billingauctiontypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemImageList {
    
    private int imagetypeField;
    
    private string imageurlField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("image-type")]
    public int imagetype {
        get {
            return this.imagetypeField;
        }
        set {
            this.imagetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("image-url")]
    public string imageurl {
        get {
            return this.imageurlField;
        }
        set {
            this.imageurlField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ArrayOfItemImage {
    
    private ItemImageList imagelistField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("image-list")]
    public ItemImageList imagelist {
        get {
            return this.imagelistField;
        }
        set {
            this.imagelistField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemCatList {
    
    private int catlevelField;
    
    private long catidField;
    
    private string catnameField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-level")]
    public int catlevel {
        get {
            return this.catlevelField;
        }
        set {
            this.catlevelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-id")]
    public long catid {
        get {
            return this.catidField;
        }
        set {
            this.catidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-name")]
    public string catname {
        get {
            return this.catnameField;
        }
        set {
            this.catnameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ArrayOfItemCat {
    
    private ItemCatList catlistField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-list")]
    public ItemCatList catlist {
        get {
            return this.catlistField;
        }
        set {
            this.catlistField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemInfo {
    
    private long itidField;
    
    private int itcountryField;
    
    private string itnameField;
    
    private float itpriceField;
    
    private int itbidcountField;
    
    private float itendingtimeField;
    
    private long itselleridField;
    
    private string itsellerloginField;
    
    private int itsellerratingField;
    
    private float itstartingtimeField;
    
    private float itstartingpriceField;
    
    private int itquantityField;
    
    private int itfotocountField;
    
    private float itreservepriceField;
    
    private string itlocationField;
    
    private float itbuynowpriceField;
    
    private int itbuynowactiveField;
    
    private int ithighbidderField;
    
    private string ithighbidderloginField;
    
    private string itdescriptionField;
    
    private int itoptionsField;
    
    private int itstateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-id")]
    public long itid {
        get {
            return this.itidField;
        }
        set {
            this.itidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-country")]
    public int itcountry {
        get {
            return this.itcountryField;
        }
        set {
            this.itcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-name")]
    public string itname {
        get {
            return this.itnameField;
        }
        set {
            this.itnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-price")]
    public float itprice {
        get {
            return this.itpriceField;
        }
        set {
            this.itpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bid-count")]
    public int itbidcount {
        get {
            return this.itbidcountField;
        }
        set {
            this.itbidcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-ending-time")]
    public float itendingtime {
        get {
            return this.itendingtimeField;
        }
        set {
            this.itendingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-id")]
    public long itsellerid {
        get {
            return this.itselleridField;
        }
        set {
            this.itselleridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-login")]
    public string itsellerlogin {
        get {
            return this.itsellerloginField;
        }
        set {
            this.itsellerloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-rating")]
    public int itsellerrating {
        get {
            return this.itsellerratingField;
        }
        set {
            this.itsellerratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-time")]
    public float itstartingtime {
        get {
            return this.itstartingtimeField;
        }
        set {
            this.itstartingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-price")]
    public float itstartingprice {
        get {
            return this.itstartingpriceField;
        }
        set {
            this.itstartingpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-quantity")]
    public int itquantity {
        get {
            return this.itquantityField;
        }
        set {
            this.itquantityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
    public int itfotocount {
        get {
            return this.itfotocountField;
        }
        set {
            this.itfotocountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-reserve-price")]
    public float itreserveprice {
        get {
            return this.itreservepriceField;
        }
        set {
            this.itreservepriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-location")]
    public string itlocation {
        get {
            return this.itlocationField;
        }
        set {
            this.itlocationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-price")]
    public float itbuynowprice {
        get {
            return this.itbuynowpriceField;
        }
        set {
            this.itbuynowpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-active")]
    public int itbuynowactive {
        get {
            return this.itbuynowactiveField;
        }
        set {
            this.itbuynowactiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-high-bidder")]
    public int ithighbidder {
        get {
            return this.ithighbidderField;
        }
        set {
            this.ithighbidderField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-high-bidder-login")]
    public string ithighbidderlogin {
        get {
            return this.ithighbidderloginField;
        }
        set {
            this.ithighbidderloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-description")]
    public string itdescription {
        get {
            return this.itdescriptionField;
        }
        set {
            this.itdescriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-options")]
    public int itoptions {
        get {
            return this.itoptionsField;
        }
        set {
            this.itoptionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-state")]
    public int itstate {
        get {
            return this.itstateField;
        }
        set {
            this.itstateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemInfoStruct {
    
    private ItemInfo iteminfoField;
    
    private ArrayOfItemCat itemcatsField;
    
    private ArrayOfItemImage itemimagesField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-info")]
    public ItemInfo iteminfo {
        get {
            return this.iteminfoField;
        }
        set {
            this.iteminfoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-cats")]
    public ArrayOfItemCat itemcats {
        get {
            return this.itemcatsField;
        }
        set {
            this.itemcatsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-images")]
    public ArrayOfItemImage itemimages {
        get {
            return this.itemimagesField;
        }
        set {
            this.itemimagesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class StructSellFailed {
    
    private long sellitemidField;
    
    private string sellfaultcodeField;
    
    private string sellfaultstringField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-item-id")]
    public long sellitemid {
        get {
            return this.sellitemidField;
        }
        set {
            this.sellitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-fault-code")]
    public string sellfaultcode {
        get {
            return this.sellfaultcodeField;
        }
        set {
            this.sellfaultcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-fault-string")]
    public string sellfaultstring {
        get {
            return this.sellfaultstringField;
        }
        set {
            this.sellfaultstringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class StructSellAgain {
    
    private long sellitemidField;
    
    private string selliteminfoField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-item-id")]
    public long sellitemid {
        get {
            return this.sellitemidField;
        }
        set {
            this.sellitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-item-info")]
    public string selliteminfo {
        get {
            return this.selliteminfoField;
        }
        set {
            this.selliteminfoField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FieldsValue {
    
    private int fidField;
    
    private string fvaluestringField;
    
    private int fvalueintField;
    
    private float fvaluefloatField;
    
    private byte[] fvalueimageField;
    
    private float fvaluedatetimeField;
    
    private bool fvaluebooleanField;
    
    /// <remarks/>
    public int fid {
        get {
            return this.fidField;
        }
        set {
            this.fidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-string")]
    public string fvaluestring {
        get {
            return this.fvaluestringField;
        }
        set {
            this.fvaluestringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-int")]
    public int fvalueint {
        get {
            return this.fvalueintField;
        }
        set {
            this.fvalueintField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-float")]
    public float fvaluefloat {
        get {
            return this.fvaluefloatField;
        }
        set {
            this.fvaluefloatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-image", DataType="base64Binary")]
    public byte[] fvalueimage {
        get {
            return this.fvalueimageField;
        }
        set {
            this.fvalueimageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-datetime")]
    public float fvaluedatetime {
        get {
            return this.fvaluedatetimeField;
        }
        set {
            this.fvaluedatetimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-boolean")]
    public bool fvalueboolean {
        get {
            return this.fvaluebooleanField;
        }
        set {
            this.fvaluebooleanField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetCatsDataCompletedEventHandler(object sender, doGetCatsDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetCatsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetCatsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CatInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CatInfoType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doLoginCompletedEventHandler(object sender, doLoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int hashoffset {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long servertime {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doLoginEncCompletedEventHandler(object sender, doLoginEncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doLoginEncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doLoginEncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int hashoffset {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long servertime {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doNewAuctionCompletedEventHandler(object sender, doNewAuctionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doNewAuctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doNewAuctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string iteminfo {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doNewAuctionExtCompletedEventHandler(object sender, doNewAuctionExtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doNewAuctionExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doNewAuctionExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string iteminfo {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSellSomeAgainCompletedEventHandler(object sender, doSellSomeAgainCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSellSomeAgainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSellSomeAgainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public StructSellAgain[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StructSellAgain[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public StructSellFailed[] itemssellfailed {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StructSellFailed[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long[] itemssellnotfound {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCheckNewAuctionCompletedEventHandler(object sender, doCheckNewAuctionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCheckNewAuctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCheckNewAuctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string itempricedesc {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCheckNewAuctionExtCompletedEventHandler(object sender, doCheckNewAuctionExtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCheckNewAuctionExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCheckNewAuctionExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string itempricedesc {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doAddDescToItemsCompletedEventHandler(object sender, doAddDescToItemsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doAddDescToItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doAddDescToItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsdesctolong {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsnotfound {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCheckItemIdByFutureItemIdCompletedEventHandler(object sender, doCheckItemIdByFutureItemIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCheckItemIdByFutureItemIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCheckItemIdByFutureItemIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetCatsDataLimitCompletedEventHandler(object sender, doGetCatsDataLimitCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetCatsDataLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetCatsDataLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CatInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CatInfoType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetItemsInfoCompletedEventHandler(object sender, doGetItemsInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetItemsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetItemsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemInfoStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemInfoStruct[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsnotfound {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsadminkilled {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetPaymentDataCompletedEventHandler(object sender, doGetPaymentDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetPaymentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetPaymentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public BillingDataType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((BillingDataType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellFormFieldsCompletedEventHandler(object sender, doGetSellFormFieldsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellFormFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellFormFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellFormType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellFormType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellFormFieldsExtCompletedEventHandler(object sender, doGetSellFormFieldsExtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellFormFieldsExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellFormFieldsExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellFormType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellFormType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSitesFlagInfoCompletedEventHandler(object sender, doGetSitesFlagInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSitesFlagInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSitesFlagInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SiteFlagInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SiteFlagInfoType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSitesInfoCompletedEventHandler(object sender, doGetSitesInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSitesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSitesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SiteInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SiteInfoType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSystemTimeCompletedEventHandler(object sender, doGetSystemTimeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSystemTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSystemTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetUserIDCompletedEventHandler(object sender, doGetUserIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetUserItemsCompletedEventHandler(object sender, doGetUserItemsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetUserItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetUserItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserItemList[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserItemList[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int useritemcount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetUserLoginCompletedEventHandler(object sender, doGetUserLoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doQueryAllSysStatusCompletedEventHandler(object sender, doQueryAllSysStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doQueryAllSysStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doQueryAllSysStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SysStatusType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SysStatusType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellFormFieldsExtLimitCompletedEventHandler(object sender, doGetSellFormFieldsExtLimitCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellFormFieldsExtLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellFormFieldsExtLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellFormType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellFormType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public int formfieldscount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellFormFieldsLimitCompletedEventHandler(object sender, doGetSellFormFieldsLimitCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellFormFieldsLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellFormFieldsLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellFormType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellFormType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public int formfieldscount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doQuerySysStatusCompletedEventHandler(object sender, doQuerySysStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doQuerySysStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doQuerySysStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doShowCatCompletedEventHandler(object sender, doShowCatCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doShowCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doShowCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public InfoCatList[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((InfoCatList[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public InfoCatList[] catchildarray {
        get {
            this.RaiseExceptionIfNecessary();
            return ((InfoCatList[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public InfoCatList[] catsisterarray {
        get {
            this.RaiseExceptionIfNecessary();
            return ((InfoCatList[])(this.results[2]));
        }
    }
    
    /// <remarks/>
    public int catitemscount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public int catitemscountfeatured {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public SearchResponseType[] catitemsarray {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SearchResponseType[])(this.results[5]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doShowItemInfoCompletedEventHandler(object sender, doShowItemInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doShowItemInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doShowItemInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemInfo Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemInfo)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public ItemCatList[] itemcatpath {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemCatList[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public ItemImageList[] itemimglist {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemImageList[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doShowUserCompletedEventHandler(object sender, doShowUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doShowUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doShowUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long userid {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string userlogin {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public long usercreatedate {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public long userlogindate {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public int userrating {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[5]));
        }
    }
    
    /// <remarks/>
    public int userisnewuser {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[6]));
        }
    }
    
    /// <remarks/>
    public int usernotactivated {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[7]));
        }
    }
    
    /// <remarks/>
    public int userclosed {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[8]));
        }
    }
    
    /// <remarks/>
    public int userblocked {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[9]));
        }
    }
    
    /// <remarks/>
    public int userterminated {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[10]));
        }
    }
    
    /// <remarks/>
    public int userhaspage {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[11]));
        }
    }
    
    /// <remarks/>
    public int userissseller {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[12]));
        }
    }
    
    /// <remarks/>
    public ShowUserFeedbacks userpositivefeedback {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ShowUserFeedbacks)(this.results[13]));
        }
    }
    
    /// <remarks/>
    public ShowUserFeedbacks usernegativefeedback {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ShowUserFeedbacks)(this.results[14]));
        }
    }
    
    /// <remarks/>
    public ShowUserFeedbacks userneutralfeedback {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ShowUserFeedbacks)(this.results[15]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doVerifyItemCompletedEventHandler(object sender, doVerifyItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doVerifyItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doVerifyItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doAddWatchListCompletedEventHandler(object sender, doAddWatchListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doAddWatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doAddWatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsnotfound {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsadminkilled {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doFeedbackCompletedEventHandler(object sender, doFeedbackCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetBidItemCompletedEventHandler(object sender, doGetBidItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetBidItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetBidItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[][] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[][])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetBidItem2CompletedEventHandler(object sender, doGetBidItem2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetBidItem2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetBidItem2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public BidListStruct2[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((BidListStruct2[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetFeedbackCompletedEventHandler(object sender, doGetFeedbackCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public FeedbackList[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((FeedbackList[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int feedbackcount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSiteJournalCompletedEventHandler(object sender, doGetSiteJournalCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSiteJournalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSiteJournalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SiteJournal[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SiteJournal[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSiteJournalInfoCompletedEventHandler(object sender, doGetSiteJournalInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSiteJournalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSiteJournalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SiteJournalInfo Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SiteJournalInfo)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyAccountCompletedEventHandler(object sender, doMyAccountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[][] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[][])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyAccount2CompletedEventHandler(object sender, doMyAccount2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyAccount2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyAccount2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MyAccountStruct2[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MyAccountStruct2[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyAccountItemsCountCompletedEventHandler(object sender, doMyAccountItemsCountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyAccountItemsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyAccountItemsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyBillingCompletedEventHandler(object sender, doMyBillingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyBillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyBillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyContactCompletedEventHandler(object sender, doMyContactCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MyContactList[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MyContactList[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyFeedbackCompletedEventHandler(object sender, doMyFeedbackCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[][] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[][])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyFeedback2CompletedEventHandler(object sender, doMyFeedback2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyFeedback2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyFeedback2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MyFeedbackListStruct2[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MyFeedbackListStruct2[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSearchCompletedEventHandler(object sender, doSearchCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int searchcountfeatured {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public SearchResponseType[] searcharray {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SearchResponseType[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetAdminUserLicenceDateCompletedEventHandler(object sender, doGetAdminUserLicenceDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetAdminUserLicenceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetAdminUserLicenceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public float Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((float)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetPaymentStatusCompletedEventHandler(object sender, doGetPaymentStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetPaymentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetPaymentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetUserLicenceDateCompletedEventHandler(object sender, doGetUserLicenceDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetUserLicenceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetUserLicenceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public float Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((float)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyBillingItemCompletedEventHandler(object sender, doMyBillingItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyBillingItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyBillingItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemBilling[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemBilling[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public ItemBilling[] endingfees {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemBilling[])(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSetUserLicenceDateCompletedEventHandler(object sender, doSetUserLicenceDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSetUserLicenceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSetUserLicenceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doBidItemCompletedEventHandler(object sender, doBidItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doBidItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doBidItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCancelBidItemCompletedEventHandler(object sender, doCancelBidItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCancelBidItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCancelBidItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doChangePriceItemCompletedEventHandler(object sender, doChangePriceItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doChangePriceItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doChangePriceItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long itemid {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doFinishAuctionCompletedEventHandler(object sender, doFinishAuctionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doFinishAuctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doFinishAuctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetItemTransactionCompletedEventHandler(object sender, doGetItemTransactionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetItemTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetItemTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemInfo Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemInfo)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public ItemCatList[] itemcatpath {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemCatList[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public ItemImageList[] itemimglist {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemImageList[])(this.results[2]));
        }
    }
    
    /// <remarks/>
    public ItemTransStruct[] bidwoncontactinfo {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemTransStruct[])(this.results[3]));
        }
    }
    
    /// <remarks/>
    public BidListStruct2[] bidlostinfo {
        get {
            this.RaiseExceptionIfNecessary();
            return ((BidListStruct2[])(this.results[4]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doRequestCancelBidCompletedEventHandler(object sender, doRequestCancelBidCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doRequestCancelBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doRequestCancelBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetCatsDataCountCompletedEventHandler(object sender, doGetCatsDataCountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetCatsDataCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetCatsDataCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyFeedback2LimitCompletedEventHandler(object sender, doMyFeedback2LimitCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyFeedback2LimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyFeedback2LimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MyFeedbackListStruct2[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MyFeedbackListStruct2[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetCountriesCompletedEventHandler(object sender, doGetCountriesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CountryInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CountryInfoType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetServiceTemplatesCompletedEventHandler(object sender, doGetServiceTemplatesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetServiceTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetServiceTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TemplateInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TemplateInfoType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellFormAttribsCompletedEventHandler(object sender, doGetSellFormAttribsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellFormAttribsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellFormAttribsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellFormType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellFormType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doFeedbackManyCompletedEventHandler(object sender, doFeedbackManyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doFeedbackManyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doFeedbackManyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public FeedbackResultStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((FeedbackResultStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doShowItemInfoExtCompletedEventHandler(object sender, doShowItemInfoExtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doShowItemInfoExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doShowItemInfoExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemInfoExt Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemInfoExt)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public ItemCatList[] itemcatpath {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemCatList[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public ItemImageList[] itemimglist {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemImageList[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetWaitingFeedbacksCountCompletedEventHandler(object sender, doGetWaitingFeedbacksCountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetWaitingFeedbacksCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetWaitingFeedbacksCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetWaitingFeedbacksCompletedEventHandler(object sender, doGetWaitingFeedbacksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetWaitingFeedbacksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetWaitingFeedbacksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public WaitFeedbackStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((WaitFeedbackStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetBlackListUsersCompletedEventHandler(object sender, doGetBlackListUsersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetBlackListUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetBlackListUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public BlackListStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((BlackListStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doRemoveFromBlackListCompletedEventHandler(object sender, doRemoveFromBlackListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doRemoveFromBlackListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doRemoveFromBlackListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public BlackListResStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((BlackListResStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetServiceInfoCategoriesCompletedEventHandler(object sender, doGetServiceInfoCategoriesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetServiceInfoCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetServiceInfoCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ServiceInfoCatStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ServiceInfoCatStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetServiceInfoCompletedEventHandler(object sender, doGetServiceInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetServiceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetServiceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ServiceInfoStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ServiceInfoStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetStatesInfoCompletedEventHandler(object sender, doGetStatesInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetStatesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetStatesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public StateInfoStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StateInfoStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetShopCatsDataCompletedEventHandler(object sender, doGetShopCatsDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetShopCatsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetShopCatsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CatInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CatInfoType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCheckExternalKeyCompletedEventHandler(object sender, doCheckExternalKeyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCheckExternalKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCheckExternalKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSellSomeAgainInShopCompletedEventHandler(object sender, doSellSomeAgainInShopCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSellSomeAgainInShopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSellSomeAgainInShopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public StructSellAgain[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StructSellAgain[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public StructSellFailed[] itemssellfailed {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StructSellFailed[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long[] itemssellnotfound {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSuperSellerStatusCompletedEventHandler(object sender, doGetSuperSellerStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSuperSellerStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSuperSellerStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetMyDataCompletedEventHandler(object sender, doGetMyDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetMyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetMyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserDataStruct Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserDataStruct)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public InvoiceDataStruct invoicedata {
        get {
            this.RaiseExceptionIfNecessary();
            return ((InvoiceDataStruct)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doInternalIStoreChangeCompletedEventHandler(object sender, doInternalIStoreChangeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doInternalIStoreChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doInternalIStoreChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doInternalCheckLoginCompletedEventHandler(object sender, doInternalCheckLoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doInternalCheckLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doInternalCheckLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long userid {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doInternalGetStatusForDebitCardCompletedEventHandler(object sender, doInternalGetStatusForDebitCardCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doInternalGetStatusForDebitCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doInternalGetStatusForDebitCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doInternalGetStatusForCreditCardCompletedEventHandler(object sender, doInternalGetStatusForCreditCardCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doInternalGetStatusForCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doInternalGetStatusForCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doInternalSubmitForDebitCardCompletedEventHandler(object sender, doInternalSubmitForDebitCardCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doInternalSubmitForDebitCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doInternalSubmitForDebitCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doInternalSubmitForCreditCardCompletedEventHandler(object sender, doInternalSubmitForCreditCardCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doInternalSubmitForCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doInternalSubmitForCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetFavouriteSellersCompletedEventHandler(object sender, doGetFavouriteSellersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetFavouriteSellersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetFavouriteSellersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public FavouritesSellersStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((FavouritesSellersStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetFavouriteCategoriesCompletedEventHandler(object sender, doGetFavouriteCategoriesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetFavouriteCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetFavouriteCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public FavouritesCategoriesStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((FavouritesCategoriesStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSpecialItemsCompletedEventHandler(object sender, doGetSpecialItemsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSpecialItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSpecialItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SpecialAuctionStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SpecialAuctionStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetPostBuyDataCompletedEventHandler(object sender, doGetPostBuyDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetPostBuyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetPostBuyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemPostBuyDataStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemPostBuyDataStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSessionHandleForWidgetCompletedEventHandler(object sender, doGetSessionHandleForWidgetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSessionHandleForWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSessionHandleForWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
